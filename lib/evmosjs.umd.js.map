{"version":3,"file":"evmosjs.umd.js","sources":["../src/proto/cosmos/base/v1beta1/coin.ts","../src/proto/cosmos/bank/v1beta1/bank.ts","../src/proto/cosmos/bank/v1beta1/tx.ts","../src/proto/cosmos/crypto/multisig/v1beta1/multisig.ts","../src/proto/google/protobuf/any.ts","../src/proto/cosmos/tx/v1beta1/tx.ts","../src/proto/cosmos/tx/signing/v1beta1/signing.ts","../src/proto/ethermint/crypto/v1/ethsecp256k1/keys.ts","../src/proto/cosmos/crypto/secp256k1/keys.ts","../src/proto/cosmos/base/query/v1beta1/pagination.ts","../src/proto/cosmos/auth/v1beta1/auth.ts","../src/proto/cosmos/auth/v1beta1/query.ts","../src/proto/ethermint/types/v1/account.ts","../src/messages/utils.ts","../src/messages.ts","../src/transaction/transaction.ts","../src/messages/msgSend.ts","../src/messages/account.ts","../src/evmosjs.ts"],"sourcesContent":["/**\n * Generated by the protoc-gen-ts.  DO NOT EDIT!\n * compiler version: 3.17.3\n * source: cosmos/base/v1beta1/coin.proto\n * git: https://github.com/thesayyn/protoc-gen-ts\n *  */\nimport * as dependency_1 from \"./../../../gogoproto/gogo\";\nimport * as pb_1 from \"google-protobuf\";\nexport namespace cosmos.base.v1beta1 {\n    export class Coin extends pb_1.Message {\n        constructor(data?: any[] | {\n            denom?: string;\n            amount?: string;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"denom\" in data && data.denom != undefined) {\n                    this.denom = data.denom;\n                }\n                if (\"amount\" in data && data.amount != undefined) {\n                    this.amount = data.amount;\n                }\n            }\n        }\n        get denom() {\n            return pb_1.Message.getField(this, 1) as string;\n        }\n        set denom(value: string) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        get amount() {\n            return pb_1.Message.getField(this, 2) as string;\n        }\n        set amount(value: string) {\n            pb_1.Message.setField(this, 2, value);\n        }\n        static fromObject(data: {\n            denom?: string;\n            amount?: string;\n        }) {\n            const message = new Coin({});\n            if (data.denom != null) {\n                message.denom = data.denom;\n            }\n            if (data.amount != null) {\n                message.amount = data.amount;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                denom?: string;\n                amount?: string;\n            } = {};\n            if (this.denom != null) {\n                data.denom = this.denom;\n            }\n            if (this.amount != null) {\n                data.amount = this.amount;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (typeof this.denom === \"string\" && this.denom.length)\n                writer.writeString(1, this.denom);\n            if (typeof this.amount === \"string\" && this.amount.length)\n                writer.writeString(2, this.amount);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Coin {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Coin();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.denom = reader.readString();\n                        break;\n                    case 2:\n                        message.amount = reader.readString();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): Coin {\n            return Coin.deserialize(bytes);\n        }\n    }\n    export class DecCoin extends pb_1.Message {\n        constructor(data?: any[] | {\n            denom?: string;\n            amount?: string;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"denom\" in data && data.denom != undefined) {\n                    this.denom = data.denom;\n                }\n                if (\"amount\" in data && data.amount != undefined) {\n                    this.amount = data.amount;\n                }\n            }\n        }\n        get denom() {\n            return pb_1.Message.getField(this, 1) as string;\n        }\n        set denom(value: string) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        get amount() {\n            return pb_1.Message.getField(this, 2) as string;\n        }\n        set amount(value: string) {\n            pb_1.Message.setField(this, 2, value);\n        }\n        static fromObject(data: {\n            denom?: string;\n            amount?: string;\n        }) {\n            const message = new DecCoin({});\n            if (data.denom != null) {\n                message.denom = data.denom;\n            }\n            if (data.amount != null) {\n                message.amount = data.amount;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                denom?: string;\n                amount?: string;\n            } = {};\n            if (this.denom != null) {\n                data.denom = this.denom;\n            }\n            if (this.amount != null) {\n                data.amount = this.amount;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (typeof this.denom === \"string\" && this.denom.length)\n                writer.writeString(1, this.denom);\n            if (typeof this.amount === \"string\" && this.amount.length)\n                writer.writeString(2, this.amount);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DecCoin {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DecCoin();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.denom = reader.readString();\n                        break;\n                    case 2:\n                        message.amount = reader.readString();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): DecCoin {\n            return DecCoin.deserialize(bytes);\n        }\n    }\n    export class IntProto extends pb_1.Message {\n        constructor(data?: any[] | {\n            int?: string;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"int\" in data && data.int != undefined) {\n                    this.int = data.int;\n                }\n            }\n        }\n        get int() {\n            return pb_1.Message.getField(this, 1) as string;\n        }\n        set int(value: string) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        static fromObject(data: {\n            int?: string;\n        }) {\n            const message = new IntProto({});\n            if (data.int != null) {\n                message.int = data.int;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                int?: string;\n            } = {};\n            if (this.int != null) {\n                data.int = this.int;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (typeof this.int === \"string\" && this.int.length)\n                writer.writeString(1, this.int);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): IntProto {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new IntProto();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.int = reader.readString();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): IntProto {\n            return IntProto.deserialize(bytes);\n        }\n    }\n    export class DecProto extends pb_1.Message {\n        constructor(data?: any[] | {\n            dec?: string;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"dec\" in data && data.dec != undefined) {\n                    this.dec = data.dec;\n                }\n            }\n        }\n        get dec() {\n            return pb_1.Message.getField(this, 1) as string;\n        }\n        set dec(value: string) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        static fromObject(data: {\n            dec?: string;\n        }) {\n            const message = new DecProto({});\n            if (data.dec != null) {\n                message.dec = data.dec;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                dec?: string;\n            } = {};\n            if (this.dec != null) {\n                data.dec = this.dec;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (typeof this.dec === \"string\" && this.dec.length)\n                writer.writeString(1, this.dec);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DecProto {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DecProto();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.dec = reader.readString();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): DecProto {\n            return DecProto.deserialize(bytes);\n        }\n    }\n}\n","/**\n * Generated by the protoc-gen-ts.  DO NOT EDIT!\n * compiler version: 3.17.3\n * source: cosmos/bank/v1beta1/bank.proto\n * git: https://github.com/thesayyn/protoc-gen-ts\n *  */\nimport * as dependency_1 from \"./../../../gogoproto/gogo\";\nimport * as dependency_2 from \"./../../../cosmos_proto/cosmos\";\nimport * as dependency_3 from \"./../../base/v1beta1/coin\";\nimport * as pb_1 from \"google-protobuf\";\nexport namespace cosmos.bank.v1beta1 {\n    export class Params extends pb_1.Message {\n        constructor(data?: any[] | {\n            send_enabled?: SendEnabled[];\n            default_send_enabled?: boolean;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"send_enabled\" in data && data.send_enabled != undefined) {\n                    this.send_enabled = data.send_enabled;\n                }\n                if (\"default_send_enabled\" in data && data.default_send_enabled != undefined) {\n                    this.default_send_enabled = data.default_send_enabled;\n                }\n            }\n        }\n        get send_enabled() {\n            return pb_1.Message.getRepeatedWrapperField(this, SendEnabled, 1) as SendEnabled[];\n        }\n        set send_enabled(value: SendEnabled[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        get default_send_enabled() {\n            return pb_1.Message.getField(this, 2) as boolean;\n        }\n        set default_send_enabled(value: boolean) {\n            pb_1.Message.setField(this, 2, value);\n        }\n        static fromObject(data: {\n            send_enabled?: ReturnType<typeof SendEnabled.prototype.toObject>[];\n            default_send_enabled?: boolean;\n        }) {\n            const message = new Params({});\n            if (data.send_enabled != null) {\n                message.send_enabled = data.send_enabled.map(item => SendEnabled.fromObject(item));\n            }\n            if (data.default_send_enabled != null) {\n                message.default_send_enabled = data.default_send_enabled;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                send_enabled?: ReturnType<typeof SendEnabled.prototype.toObject>[];\n                default_send_enabled?: boolean;\n            } = {};\n            if (this.send_enabled != null) {\n                data.send_enabled = this.send_enabled.map((item: SendEnabled) => item.toObject());\n            }\n            if (this.default_send_enabled != null) {\n                data.default_send_enabled = this.default_send_enabled;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.send_enabled !== undefined)\n                writer.writeRepeatedMessage(1, this.send_enabled, (item: SendEnabled) => item.serialize(writer));\n            if (this.default_send_enabled !== undefined)\n                writer.writeBool(2, this.default_send_enabled);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Params {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Params();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.send_enabled, () => pb_1.Message.addToRepeatedWrapperField(message, 1, SendEnabled.deserialize(reader), SendEnabled));\n                        break;\n                    case 2:\n                        message.default_send_enabled = reader.readBool();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): Params {\n            return Params.deserialize(bytes);\n        }\n    }\n    export class SendEnabled extends pb_1.Message {\n        constructor(data?: any[] | {\n            denom?: string;\n            enabled?: boolean;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"denom\" in data && data.denom != undefined) {\n                    this.denom = data.denom;\n                }\n                if (\"enabled\" in data && data.enabled != undefined) {\n                    this.enabled = data.enabled;\n                }\n            }\n        }\n        get denom() {\n            return pb_1.Message.getField(this, 1) as string;\n        }\n        set denom(value: string) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        get enabled() {\n            return pb_1.Message.getField(this, 2) as boolean;\n        }\n        set enabled(value: boolean) {\n            pb_1.Message.setField(this, 2, value);\n        }\n        static fromObject(data: {\n            denom?: string;\n            enabled?: boolean;\n        }) {\n            const message = new SendEnabled({});\n            if (data.denom != null) {\n                message.denom = data.denom;\n            }\n            if (data.enabled != null) {\n                message.enabled = data.enabled;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                denom?: string;\n                enabled?: boolean;\n            } = {};\n            if (this.denom != null) {\n                data.denom = this.denom;\n            }\n            if (this.enabled != null) {\n                data.enabled = this.enabled;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (typeof this.denom === \"string\" && this.denom.length)\n                writer.writeString(1, this.denom);\n            if (this.enabled !== undefined)\n                writer.writeBool(2, this.enabled);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SendEnabled {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SendEnabled();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.denom = reader.readString();\n                        break;\n                    case 2:\n                        message.enabled = reader.readBool();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): SendEnabled {\n            return SendEnabled.deserialize(bytes);\n        }\n    }\n    export class Input extends pb_1.Message {\n        constructor(data?: any[] | {\n            address?: string;\n            coins?: dependency_3.cosmos.base.v1beta1.Coin[];\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"address\" in data && data.address != undefined) {\n                    this.address = data.address;\n                }\n                if (\"coins\" in data && data.coins != undefined) {\n                    this.coins = data.coins;\n                }\n            }\n        }\n        get address() {\n            return pb_1.Message.getField(this, 1) as string;\n        }\n        set address(value: string) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        get coins() {\n            return pb_1.Message.getRepeatedWrapperField(this, dependency_3.cosmos.base.v1beta1.Coin, 2) as dependency_3.cosmos.base.v1beta1.Coin[];\n        }\n        set coins(value: dependency_3.cosmos.base.v1beta1.Coin[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 2, value);\n        }\n        static fromObject(data: {\n            address?: string;\n            coins?: ReturnType<typeof dependency_3.cosmos.base.v1beta1.Coin.prototype.toObject>[];\n        }) {\n            const message = new Input({});\n            if (data.address != null) {\n                message.address = data.address;\n            }\n            if (data.coins != null) {\n                message.coins = data.coins.map(item => dependency_3.cosmos.base.v1beta1.Coin.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                address?: string;\n                coins?: ReturnType<typeof dependency_3.cosmos.base.v1beta1.Coin.prototype.toObject>[];\n            } = {};\n            if (this.address != null) {\n                data.address = this.address;\n            }\n            if (this.coins != null) {\n                data.coins = this.coins.map((item: dependency_3.cosmos.base.v1beta1.Coin) => item.toObject());\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (typeof this.address === \"string\" && this.address.length)\n                writer.writeString(1, this.address);\n            if (this.coins !== undefined)\n                writer.writeRepeatedMessage(2, this.coins, (item: dependency_3.cosmos.base.v1beta1.Coin) => item.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Input {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Input();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.address = reader.readString();\n                        break;\n                    case 2:\n                        reader.readMessage(message.coins, () => pb_1.Message.addToRepeatedWrapperField(message, 2, dependency_3.cosmos.base.v1beta1.Coin.deserialize(reader), dependency_3.cosmos.base.v1beta1.Coin));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): Input {\n            return Input.deserialize(bytes);\n        }\n    }\n    export class Output extends pb_1.Message {\n        constructor(data?: any[] | {\n            address?: string;\n            coins?: dependency_3.cosmos.base.v1beta1.Coin[];\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"address\" in data && data.address != undefined) {\n                    this.address = data.address;\n                }\n                if (\"coins\" in data && data.coins != undefined) {\n                    this.coins = data.coins;\n                }\n            }\n        }\n        get address() {\n            return pb_1.Message.getField(this, 1) as string;\n        }\n        set address(value: string) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        get coins() {\n            return pb_1.Message.getRepeatedWrapperField(this, dependency_3.cosmos.base.v1beta1.Coin, 2) as dependency_3.cosmos.base.v1beta1.Coin[];\n        }\n        set coins(value: dependency_3.cosmos.base.v1beta1.Coin[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 2, value);\n        }\n        static fromObject(data: {\n            address?: string;\n            coins?: ReturnType<typeof dependency_3.cosmos.base.v1beta1.Coin.prototype.toObject>[];\n        }) {\n            const message = new Output({});\n            if (data.address != null) {\n                message.address = data.address;\n            }\n            if (data.coins != null) {\n                message.coins = data.coins.map(item => dependency_3.cosmos.base.v1beta1.Coin.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                address?: string;\n                coins?: ReturnType<typeof dependency_3.cosmos.base.v1beta1.Coin.prototype.toObject>[];\n            } = {};\n            if (this.address != null) {\n                data.address = this.address;\n            }\n            if (this.coins != null) {\n                data.coins = this.coins.map((item: dependency_3.cosmos.base.v1beta1.Coin) => item.toObject());\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (typeof this.address === \"string\" && this.address.length)\n                writer.writeString(1, this.address);\n            if (this.coins !== undefined)\n                writer.writeRepeatedMessage(2, this.coins, (item: dependency_3.cosmos.base.v1beta1.Coin) => item.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Output {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Output();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.address = reader.readString();\n                        break;\n                    case 2:\n                        reader.readMessage(message.coins, () => pb_1.Message.addToRepeatedWrapperField(message, 2, dependency_3.cosmos.base.v1beta1.Coin.deserialize(reader), dependency_3.cosmos.base.v1beta1.Coin));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): Output {\n            return Output.deserialize(bytes);\n        }\n    }\n    export class Supply extends pb_1.Message {\n        constructor(data?: any[] | {\n            total?: dependency_3.cosmos.base.v1beta1.Coin[];\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"total\" in data && data.total != undefined) {\n                    this.total = data.total;\n                }\n            }\n        }\n        get total() {\n            return pb_1.Message.getRepeatedWrapperField(this, dependency_3.cosmos.base.v1beta1.Coin, 1) as dependency_3.cosmos.base.v1beta1.Coin[];\n        }\n        set total(value: dependency_3.cosmos.base.v1beta1.Coin[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data: {\n            total?: ReturnType<typeof dependency_3.cosmos.base.v1beta1.Coin.prototype.toObject>[];\n        }) {\n            const message = new Supply({});\n            if (data.total != null) {\n                message.total = data.total.map(item => dependency_3.cosmos.base.v1beta1.Coin.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                total?: ReturnType<typeof dependency_3.cosmos.base.v1beta1.Coin.prototype.toObject>[];\n            } = {};\n            if (this.total != null) {\n                data.total = this.total.map((item: dependency_3.cosmos.base.v1beta1.Coin) => item.toObject());\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.total !== undefined)\n                writer.writeRepeatedMessage(1, this.total, (item: dependency_3.cosmos.base.v1beta1.Coin) => item.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Supply {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Supply();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.total, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_3.cosmos.base.v1beta1.Coin.deserialize(reader), dependency_3.cosmos.base.v1beta1.Coin));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): Supply {\n            return Supply.deserialize(bytes);\n        }\n    }\n    export class DenomUnit extends pb_1.Message {\n        constructor(data?: any[] | {\n            denom?: string;\n            exponent?: number;\n            aliases?: string[];\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"denom\" in data && data.denom != undefined) {\n                    this.denom = data.denom;\n                }\n                if (\"exponent\" in data && data.exponent != undefined) {\n                    this.exponent = data.exponent;\n                }\n                if (\"aliases\" in data && data.aliases != undefined) {\n                    this.aliases = data.aliases;\n                }\n            }\n        }\n        get denom() {\n            return pb_1.Message.getField(this, 1) as string;\n        }\n        set denom(value: string) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        get exponent() {\n            return pb_1.Message.getField(this, 2) as number;\n        }\n        set exponent(value: number) {\n            pb_1.Message.setField(this, 2, value);\n        }\n        get aliases() {\n            return pb_1.Message.getField(this, 3) as string[];\n        }\n        set aliases(value: string[]) {\n            pb_1.Message.setField(this, 3, value);\n        }\n        static fromObject(data: {\n            denom?: string;\n            exponent?: number;\n            aliases?: string[];\n        }) {\n            const message = new DenomUnit({});\n            if (data.denom != null) {\n                message.denom = data.denom;\n            }\n            if (data.exponent != null) {\n                message.exponent = data.exponent;\n            }\n            if (data.aliases != null) {\n                message.aliases = data.aliases;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                denom?: string;\n                exponent?: number;\n                aliases?: string[];\n            } = {};\n            if (this.denom != null) {\n                data.denom = this.denom;\n            }\n            if (this.exponent != null) {\n                data.exponent = this.exponent;\n            }\n            if (this.aliases != null) {\n                data.aliases = this.aliases;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (typeof this.denom === \"string\" && this.denom.length)\n                writer.writeString(1, this.denom);\n            if (this.exponent !== undefined)\n                writer.writeUint32(2, this.exponent);\n            if (this.aliases !== undefined)\n                writer.writeRepeatedString(3, this.aliases);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DenomUnit {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DenomUnit();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.denom = reader.readString();\n                        break;\n                    case 2:\n                        message.exponent = reader.readUint32();\n                        break;\n                    case 3:\n                        pb_1.Message.addToRepeatedField(message, 3, reader.readString());\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): DenomUnit {\n            return DenomUnit.deserialize(bytes);\n        }\n    }\n    export class Metadata extends pb_1.Message {\n        constructor(data?: any[] | {\n            description?: string;\n            denom_units?: DenomUnit[];\n            base?: string;\n            display?: string;\n            name?: string;\n            symbol?: string;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"description\" in data && data.description != undefined) {\n                    this.description = data.description;\n                }\n                if (\"denom_units\" in data && data.denom_units != undefined) {\n                    this.denom_units = data.denom_units;\n                }\n                if (\"base\" in data && data.base != undefined) {\n                    this.base = data.base;\n                }\n                if (\"display\" in data && data.display != undefined) {\n                    this.display = data.display;\n                }\n                if (\"name\" in data && data.name != undefined) {\n                    this.name = data.name;\n                }\n                if (\"symbol\" in data && data.symbol != undefined) {\n                    this.symbol = data.symbol;\n                }\n            }\n        }\n        get description() {\n            return pb_1.Message.getField(this, 1) as string;\n        }\n        set description(value: string) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        get denom_units() {\n            return pb_1.Message.getRepeatedWrapperField(this, DenomUnit, 2) as DenomUnit[];\n        }\n        set denom_units(value: DenomUnit[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 2, value);\n        }\n        get base() {\n            return pb_1.Message.getField(this, 3) as string;\n        }\n        set base(value: string) {\n            pb_1.Message.setField(this, 3, value);\n        }\n        get display() {\n            return pb_1.Message.getField(this, 4) as string;\n        }\n        set display(value: string) {\n            pb_1.Message.setField(this, 4, value);\n        }\n        get name() {\n            return pb_1.Message.getField(this, 5) as string;\n        }\n        set name(value: string) {\n            pb_1.Message.setField(this, 5, value);\n        }\n        get symbol() {\n            return pb_1.Message.getField(this, 6) as string;\n        }\n        set symbol(value: string) {\n            pb_1.Message.setField(this, 6, value);\n        }\n        static fromObject(data: {\n            description?: string;\n            denom_units?: ReturnType<typeof DenomUnit.prototype.toObject>[];\n            base?: string;\n            display?: string;\n            name?: string;\n            symbol?: string;\n        }) {\n            const message = new Metadata({});\n            if (data.description != null) {\n                message.description = data.description;\n            }\n            if (data.denom_units != null) {\n                message.denom_units = data.denom_units.map(item => DenomUnit.fromObject(item));\n            }\n            if (data.base != null) {\n                message.base = data.base;\n            }\n            if (data.display != null) {\n                message.display = data.display;\n            }\n            if (data.name != null) {\n                message.name = data.name;\n            }\n            if (data.symbol != null) {\n                message.symbol = data.symbol;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                description?: string;\n                denom_units?: ReturnType<typeof DenomUnit.prototype.toObject>[];\n                base?: string;\n                display?: string;\n                name?: string;\n                symbol?: string;\n            } = {};\n            if (this.description != null) {\n                data.description = this.description;\n            }\n            if (this.denom_units != null) {\n                data.denom_units = this.denom_units.map((item: DenomUnit) => item.toObject());\n            }\n            if (this.base != null) {\n                data.base = this.base;\n            }\n            if (this.display != null) {\n                data.display = this.display;\n            }\n            if (this.name != null) {\n                data.name = this.name;\n            }\n            if (this.symbol != null) {\n                data.symbol = this.symbol;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (typeof this.description === \"string\" && this.description.length)\n                writer.writeString(1, this.description);\n            if (this.denom_units !== undefined)\n                writer.writeRepeatedMessage(2, this.denom_units, (item: DenomUnit) => item.serialize(writer));\n            if (typeof this.base === \"string\" && this.base.length)\n                writer.writeString(3, this.base);\n            if (typeof this.display === \"string\" && this.display.length)\n                writer.writeString(4, this.display);\n            if (typeof this.name === \"string\" && this.name.length)\n                writer.writeString(5, this.name);\n            if (typeof this.symbol === \"string\" && this.symbol.length)\n                writer.writeString(6, this.symbol);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Metadata {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Metadata();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.description = reader.readString();\n                        break;\n                    case 2:\n                        reader.readMessage(message.denom_units, () => pb_1.Message.addToRepeatedWrapperField(message, 2, DenomUnit.deserialize(reader), DenomUnit));\n                        break;\n                    case 3:\n                        message.base = reader.readString();\n                        break;\n                    case 4:\n                        message.display = reader.readString();\n                        break;\n                    case 5:\n                        message.name = reader.readString();\n                        break;\n                    case 6:\n                        message.symbol = reader.readString();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): Metadata {\n            return Metadata.deserialize(bytes);\n        }\n    }\n}\n","/**\n * Generated by the protoc-gen-ts.  DO NOT EDIT!\n * compiler version: 3.17.3\n * source: cosmos/bank/v1beta1/tx.proto\n * git: https://github.com/thesayyn/protoc-gen-ts\n *  */\nimport * as dependency_1 from \"./../../../gogoproto/gogo\";\nimport * as dependency_2 from \"./../../base/v1beta1/coin\";\nimport * as dependency_3 from \"./bank\";\nimport * as pb_1 from \"google-protobuf\";\nimport * as grpc_1 from \"@grpc/grpc-js\";\nexport namespace cosmos.bank.v1beta1 {\n    export class MsgSend extends pb_1.Message {\n        constructor(data?: any[] | {\n            from_address?: string;\n            to_address?: string;\n            amount?: dependency_2.cosmos.base.v1beta1.Coin[];\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"from_address\" in data && data.from_address != undefined) {\n                    this.from_address = data.from_address;\n                }\n                if (\"to_address\" in data && data.to_address != undefined) {\n                    this.to_address = data.to_address;\n                }\n                if (\"amount\" in data && data.amount != undefined) {\n                    this.amount = data.amount;\n                }\n            }\n        }\n        get from_address() {\n            return pb_1.Message.getField(this, 1) as string;\n        }\n        set from_address(value: string) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        get to_address() {\n            return pb_1.Message.getField(this, 2) as string;\n        }\n        set to_address(value: string) {\n            pb_1.Message.setField(this, 2, value);\n        }\n        get amount() {\n            return pb_1.Message.getRepeatedWrapperField(this, dependency_2.cosmos.base.v1beta1.Coin, 3) as dependency_2.cosmos.base.v1beta1.Coin[];\n        }\n        set amount(value: dependency_2.cosmos.base.v1beta1.Coin[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 3, value);\n        }\n        static fromObject(data: {\n            from_address?: string;\n            to_address?: string;\n            amount?: ReturnType<typeof dependency_2.cosmos.base.v1beta1.Coin.prototype.toObject>[];\n        }) {\n            const message = new MsgSend({});\n            if (data.from_address != null) {\n                message.from_address = data.from_address;\n            }\n            if (data.to_address != null) {\n                message.to_address = data.to_address;\n            }\n            if (data.amount != null) {\n                message.amount = data.amount.map(item => dependency_2.cosmos.base.v1beta1.Coin.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                from_address?: string;\n                to_address?: string;\n                amount?: ReturnType<typeof dependency_2.cosmos.base.v1beta1.Coin.prototype.toObject>[];\n            } = {};\n            if (this.from_address != null) {\n                data.from_address = this.from_address;\n            }\n            if (this.to_address != null) {\n                data.to_address = this.to_address;\n            }\n            if (this.amount != null) {\n                data.amount = this.amount.map((item: dependency_2.cosmos.base.v1beta1.Coin) => item.toObject());\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (typeof this.from_address === \"string\" && this.from_address.length)\n                writer.writeString(1, this.from_address);\n            if (typeof this.to_address === \"string\" && this.to_address.length)\n                writer.writeString(2, this.to_address);\n            if (this.amount !== undefined)\n                writer.writeRepeatedMessage(3, this.amount, (item: dependency_2.cosmos.base.v1beta1.Coin) => item.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MsgSend {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgSend();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.from_address = reader.readString();\n                        break;\n                    case 2:\n                        message.to_address = reader.readString();\n                        break;\n                    case 3:\n                        reader.readMessage(message.amount, () => pb_1.Message.addToRepeatedWrapperField(message, 3, dependency_2.cosmos.base.v1beta1.Coin.deserialize(reader), dependency_2.cosmos.base.v1beta1.Coin));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): MsgSend {\n            return MsgSend.deserialize(bytes);\n        }\n    }\n    export class MsgSendResponse extends pb_1.Message {\n        constructor(data?: any[] | {}) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);\n            if (!Array.isArray(data) && typeof data == \"object\") { }\n        }\n        static fromObject(data: {}) {\n            const message = new MsgSendResponse({});\n            return message;\n        }\n        toObject() {\n            const data: {} = {};\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MsgSendResponse {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgSendResponse();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): MsgSendResponse {\n            return MsgSendResponse.deserialize(bytes);\n        }\n    }\n    export class MsgMultiSend extends pb_1.Message {\n        constructor(data?: any[] | {\n            inputs?: dependency_3.cosmos.bank.v1beta1.Input[];\n            outputs?: dependency_3.cosmos.bank.v1beta1.Output[];\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1, 2], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"inputs\" in data && data.inputs != undefined) {\n                    this.inputs = data.inputs;\n                }\n                if (\"outputs\" in data && data.outputs != undefined) {\n                    this.outputs = data.outputs;\n                }\n            }\n        }\n        get inputs() {\n            return pb_1.Message.getRepeatedWrapperField(this, dependency_3.cosmos.bank.v1beta1.Input, 1) as dependency_3.cosmos.bank.v1beta1.Input[];\n        }\n        set inputs(value: dependency_3.cosmos.bank.v1beta1.Input[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        get outputs() {\n            return pb_1.Message.getRepeatedWrapperField(this, dependency_3.cosmos.bank.v1beta1.Output, 2) as dependency_3.cosmos.bank.v1beta1.Output[];\n        }\n        set outputs(value: dependency_3.cosmos.bank.v1beta1.Output[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 2, value);\n        }\n        static fromObject(data: {\n            inputs?: ReturnType<typeof dependency_3.cosmos.bank.v1beta1.Input.prototype.toObject>[];\n            outputs?: ReturnType<typeof dependency_3.cosmos.bank.v1beta1.Output.prototype.toObject>[];\n        }) {\n            const message = new MsgMultiSend({});\n            if (data.inputs != null) {\n                message.inputs = data.inputs.map(item => dependency_3.cosmos.bank.v1beta1.Input.fromObject(item));\n            }\n            if (data.outputs != null) {\n                message.outputs = data.outputs.map(item => dependency_3.cosmos.bank.v1beta1.Output.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                inputs?: ReturnType<typeof dependency_3.cosmos.bank.v1beta1.Input.prototype.toObject>[];\n                outputs?: ReturnType<typeof dependency_3.cosmos.bank.v1beta1.Output.prototype.toObject>[];\n            } = {};\n            if (this.inputs != null) {\n                data.inputs = this.inputs.map((item: dependency_3.cosmos.bank.v1beta1.Input) => item.toObject());\n            }\n            if (this.outputs != null) {\n                data.outputs = this.outputs.map((item: dependency_3.cosmos.bank.v1beta1.Output) => item.toObject());\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.inputs !== undefined)\n                writer.writeRepeatedMessage(1, this.inputs, (item: dependency_3.cosmos.bank.v1beta1.Input) => item.serialize(writer));\n            if (this.outputs !== undefined)\n                writer.writeRepeatedMessage(2, this.outputs, (item: dependency_3.cosmos.bank.v1beta1.Output) => item.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MsgMultiSend {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgMultiSend();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.inputs, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_3.cosmos.bank.v1beta1.Input.deserialize(reader), dependency_3.cosmos.bank.v1beta1.Input));\n                        break;\n                    case 2:\n                        reader.readMessage(message.outputs, () => pb_1.Message.addToRepeatedWrapperField(message, 2, dependency_3.cosmos.bank.v1beta1.Output.deserialize(reader), dependency_3.cosmos.bank.v1beta1.Output));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): MsgMultiSend {\n            return MsgMultiSend.deserialize(bytes);\n        }\n    }\n    export class MsgMultiSendResponse extends pb_1.Message {\n        constructor(data?: any[] | {}) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);\n            if (!Array.isArray(data) && typeof data == \"object\") { }\n        }\n        static fromObject(data: {}) {\n            const message = new MsgMultiSendResponse({});\n            return message;\n        }\n        toObject() {\n            const data: {} = {};\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MsgMultiSendResponse {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgMultiSendResponse();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): MsgMultiSendResponse {\n            return MsgMultiSendResponse.deserialize(bytes);\n        }\n    }\n    interface GrpcUnaryServiceInterface<P, R> {\n        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;\n        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;\n        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;\n        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;\n    }\n    interface GrpcStreamServiceInterface<P, R> {\n        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;\n        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;\n    }\n    interface GrpWritableServiceInterface<P, R> {\n        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;\n        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;\n        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;\n        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;\n    }\n    interface GrpcChunkServiceInterface<P, R> {\n        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;\n        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;\n    }\n    interface GrpcPromiseServiceInterface<P, R> {\n        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;\n        (message: P, options?: grpc_1.CallOptions): Promise<R>;\n    }\n    export abstract class UnimplementedMsgService {\n        static definition = {\n            Send: {\n                path: \"/cosmos.bank.v1beta1.Msg/Send\",\n                requestStream: false,\n                responseStream: false,\n                requestSerialize: (message: MsgSend) => Buffer.from(message.serialize()),\n                requestDeserialize: (bytes: Buffer) => MsgSend.deserialize(new Uint8Array(bytes)),\n                responseSerialize: (message: MsgSendResponse) => Buffer.from(message.serialize()),\n                responseDeserialize: (bytes: Buffer) => MsgSendResponse.deserialize(new Uint8Array(bytes))\n            },\n            MultiSend: {\n                path: \"/cosmos.bank.v1beta1.Msg/MultiSend\",\n                requestStream: false,\n                responseStream: false,\n                requestSerialize: (message: MsgMultiSend) => Buffer.from(message.serialize()),\n                requestDeserialize: (bytes: Buffer) => MsgMultiSend.deserialize(new Uint8Array(bytes)),\n                responseSerialize: (message: MsgMultiSendResponse) => Buffer.from(message.serialize()),\n                responseDeserialize: (bytes: Buffer) => MsgMultiSendResponse.deserialize(new Uint8Array(bytes))\n            }\n        };\n        [method: string]: grpc_1.UntypedHandleCall;\n        abstract Send(call: grpc_1.ServerUnaryCall<MsgSend, MsgSendResponse>, callback: grpc_1.sendUnaryData<MsgSendResponse>): void;\n        abstract MultiSend(call: grpc_1.ServerUnaryCall<MsgMultiSend, MsgMultiSendResponse>, callback: grpc_1.sendUnaryData<MsgMultiSendResponse>): void;\n    }\n    export class MsgClient extends grpc_1.makeGenericClientConstructor(UnimplementedMsgService.definition, \"Msg\", {}) {\n        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {\n            super(address, credentials, options)\n        }\n        Send: GrpcUnaryServiceInterface<MsgSend, MsgSendResponse> = (message: MsgSend, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<MsgSendResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<MsgSendResponse>, callback?: grpc_1.requestCallback<MsgSendResponse>): grpc_1.ClientUnaryCall => {\n            return super.Send(message, metadata, options, callback);\n        };\n        MultiSend: GrpcUnaryServiceInterface<MsgMultiSend, MsgMultiSendResponse> = (message: MsgMultiSend, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<MsgMultiSendResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<MsgMultiSendResponse>, callback?: grpc_1.requestCallback<MsgMultiSendResponse>): grpc_1.ClientUnaryCall => {\n            return super.MultiSend(message, metadata, options, callback);\n        };\n    }\n}\n","/**\n * Generated by the protoc-gen-ts.  DO NOT EDIT!\n * compiler version: 3.17.3\n * source: cosmos/crypto/multisig/v1beta1/multisig.proto\n * git: https://github.com/thesayyn/protoc-gen-ts\n *  */\nimport * as dependency_1 from \"./../../../../gogoproto/gogo\";\nimport * as pb_1 from \"google-protobuf\";\nexport namespace cosmos.crypto.multisig.v1beta1 {\n    export class MultiSignature extends pb_1.Message {\n        constructor(data?: any[] | {\n            signatures?: Uint8Array[];\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"signatures\" in data && data.signatures != undefined) {\n                    this.signatures = data.signatures;\n                }\n            }\n        }\n        get signatures() {\n            return pb_1.Message.getField(this, 1) as Uint8Array[];\n        }\n        set signatures(value: Uint8Array[]) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        static fromObject(data: {\n            signatures?: Uint8Array[];\n        }) {\n            const message = new MultiSignature({});\n            if (data.signatures != null) {\n                message.signatures = data.signatures;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                signatures?: Uint8Array[];\n            } = {};\n            if (this.signatures != null) {\n                data.signatures = this.signatures;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.signatures !== undefined)\n                writer.writeRepeatedBytes(1, this.signatures);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MultiSignature {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MultiSignature();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        pb_1.Message.addToRepeatedField(message, 1, reader.readBytes());\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): MultiSignature {\n            return MultiSignature.deserialize(bytes);\n        }\n    }\n    export class CompactBitArray extends pb_1.Message {\n        constructor(data?: any[] | {\n            extra_bits_stored?: number;\n            elems?: Uint8Array;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"extra_bits_stored\" in data && data.extra_bits_stored != undefined) {\n                    this.extra_bits_stored = data.extra_bits_stored;\n                }\n                if (\"elems\" in data && data.elems != undefined) {\n                    this.elems = data.elems;\n                }\n            }\n        }\n        get extra_bits_stored() {\n            return pb_1.Message.getField(this, 1) as number;\n        }\n        set extra_bits_stored(value: number) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        get elems() {\n            return pb_1.Message.getField(this, 2) as Uint8Array;\n        }\n        set elems(value: Uint8Array) {\n            pb_1.Message.setField(this, 2, value);\n        }\n        static fromObject(data: {\n            extra_bits_stored?: number;\n            elems?: Uint8Array;\n        }) {\n            const message = new CompactBitArray({});\n            if (data.extra_bits_stored != null) {\n                message.extra_bits_stored = data.extra_bits_stored;\n            }\n            if (data.elems != null) {\n                message.elems = data.elems;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                extra_bits_stored?: number;\n                elems?: Uint8Array;\n            } = {};\n            if (this.extra_bits_stored != null) {\n                data.extra_bits_stored = this.extra_bits_stored;\n            }\n            if (this.elems != null) {\n                data.elems = this.elems;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.extra_bits_stored !== undefined)\n                writer.writeUint32(1, this.extra_bits_stored);\n            if (this.elems !== undefined)\n                writer.writeBytes(2, this.elems);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CompactBitArray {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CompactBitArray();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.extra_bits_stored = reader.readUint32();\n                        break;\n                    case 2:\n                        message.elems = reader.readBytes();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): CompactBitArray {\n            return CompactBitArray.deserialize(bytes);\n        }\n    }\n}\n","/**\n * Generated by the protoc-gen-ts.  DO NOT EDIT!\n * compiler version: 3.17.3\n * source: google/protobuf/any.proto\n * git: https://github.com/thesayyn/protoc-gen-ts\n *  */\nimport * as dependency_1 from \"./../../gogoproto/gogo\";\nimport * as pb_1 from \"google-protobuf\";\nexport namespace google.protobuf {\n    export class Any extends pb_1.Message {\n        constructor(data?: any[] | {\n            type_url?: string;\n            value?: Uint8Array;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"type_url\" in data && data.type_url != undefined) {\n                    this.type_url = data.type_url;\n                }\n                if (\"value\" in data && data.value != undefined) {\n                    this.value = data.value;\n                }\n            }\n        }\n        get type_url() {\n            return pb_1.Message.getField(this, 1) as string;\n        }\n        set type_url(value: string) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        get value() {\n            return pb_1.Message.getField(this, 2) as Uint8Array;\n        }\n        set value(value: Uint8Array) {\n            pb_1.Message.setField(this, 2, value);\n        }\n        static fromObject(data: {\n            type_url?: string;\n            value?: Uint8Array;\n        }) {\n            const message = new Any({});\n            if (data.type_url != null) {\n                message.type_url = data.type_url;\n            }\n            if (data.value != null) {\n                message.value = data.value;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                type_url?: string;\n                value?: Uint8Array;\n            } = {};\n            if (this.type_url != null) {\n                data.type_url = this.type_url;\n            }\n            if (this.value != null) {\n                data.value = this.value;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (typeof this.type_url === \"string\" && this.type_url.length)\n                writer.writeString(1, this.type_url);\n            if (this.value !== undefined)\n                writer.writeBytes(2, this.value);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Any {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Any();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.type_url = reader.readString();\n                        break;\n                    case 2:\n                        message.value = reader.readBytes();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): Any {\n            return Any.deserialize(bytes);\n        }\n    }\n}\n","/**\n * Generated by the protoc-gen-ts.  DO NOT EDIT!\n * compiler version: 3.17.3\n * source: cosmos/tx/v1beta1/tx.proto\n * git: https://github.com/thesayyn/protoc-gen-ts\n *  */\nimport * as dependency_1 from \"./../../../gogoproto/gogo\";\nimport * as dependency_2 from \"./../../crypto/multisig/v1beta1/multisig\";\nimport * as dependency_3 from \"./../../base/v1beta1/coin\";\nimport * as dependency_4 from \"./../signing/v1beta1/signing\";\nimport * as dependency_5 from \"./../../../google/protobuf/any\";\nimport * as pb_1 from \"google-protobuf\";\nexport namespace cosmos.tx.v1beta1 {\n    export class Tx extends pb_1.Message {\n        constructor(data?: any[] | {\n            body?: TxBody;\n            auth_info?: AuthInfo;\n            signatures?: Uint8Array[];\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"body\" in data && data.body != undefined) {\n                    this.body = data.body;\n                }\n                if (\"auth_info\" in data && data.auth_info != undefined) {\n                    this.auth_info = data.auth_info;\n                }\n                if (\"signatures\" in data && data.signatures != undefined) {\n                    this.signatures = data.signatures;\n                }\n            }\n        }\n        get body() {\n            return pb_1.Message.getWrapperField(this, TxBody, 1) as TxBody;\n        }\n        set body(value: TxBody) {\n            pb_1.Message.setWrapperField(this, 1, value);\n        }\n        get auth_info() {\n            return pb_1.Message.getWrapperField(this, AuthInfo, 2) as AuthInfo;\n        }\n        set auth_info(value: AuthInfo) {\n            pb_1.Message.setWrapperField(this, 2, value);\n        }\n        get signatures() {\n            return pb_1.Message.getField(this, 3) as Uint8Array[];\n        }\n        set signatures(value: Uint8Array[]) {\n            pb_1.Message.setField(this, 3, value);\n        }\n        static fromObject(data: {\n            body?: ReturnType<typeof TxBody.prototype.toObject>;\n            auth_info?: ReturnType<typeof AuthInfo.prototype.toObject>;\n            signatures?: Uint8Array[];\n        }) {\n            const message = new Tx({});\n            if (data.body != null) {\n                message.body = TxBody.fromObject(data.body);\n            }\n            if (data.auth_info != null) {\n                message.auth_info = AuthInfo.fromObject(data.auth_info);\n            }\n            if (data.signatures != null) {\n                message.signatures = data.signatures;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                body?: ReturnType<typeof TxBody.prototype.toObject>;\n                auth_info?: ReturnType<typeof AuthInfo.prototype.toObject>;\n                signatures?: Uint8Array[];\n            } = {};\n            if (this.body != null) {\n                data.body = this.body.toObject();\n            }\n            if (this.auth_info != null) {\n                data.auth_info = this.auth_info.toObject();\n            }\n            if (this.signatures != null) {\n                data.signatures = this.signatures;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.body !== undefined)\n                writer.writeMessage(1, this.body, () => this.body.serialize(writer));\n            if (this.auth_info !== undefined)\n                writer.writeMessage(2, this.auth_info, () => this.auth_info.serialize(writer));\n            if (this.signatures !== undefined)\n                writer.writeRepeatedBytes(3, this.signatures);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Tx {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Tx();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.body, () => message.body = TxBody.deserialize(reader));\n                        break;\n                    case 2:\n                        reader.readMessage(message.auth_info, () => message.auth_info = AuthInfo.deserialize(reader));\n                        break;\n                    case 3:\n                        pb_1.Message.addToRepeatedField(message, 3, reader.readBytes());\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): Tx {\n            return Tx.deserialize(bytes);\n        }\n    }\n    export class TxRaw extends pb_1.Message {\n        constructor(data?: any[] | {\n            body_bytes?: Uint8Array;\n            auth_info_bytes?: Uint8Array;\n            signatures?: Uint8Array[];\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"body_bytes\" in data && data.body_bytes != undefined) {\n                    this.body_bytes = data.body_bytes;\n                }\n                if (\"auth_info_bytes\" in data && data.auth_info_bytes != undefined) {\n                    this.auth_info_bytes = data.auth_info_bytes;\n                }\n                if (\"signatures\" in data && data.signatures != undefined) {\n                    this.signatures = data.signatures;\n                }\n            }\n        }\n        get body_bytes() {\n            return pb_1.Message.getField(this, 1) as Uint8Array;\n        }\n        set body_bytes(value: Uint8Array) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        get auth_info_bytes() {\n            return pb_1.Message.getField(this, 2) as Uint8Array;\n        }\n        set auth_info_bytes(value: Uint8Array) {\n            pb_1.Message.setField(this, 2, value);\n        }\n        get signatures() {\n            return pb_1.Message.getField(this, 3) as Uint8Array[];\n        }\n        set signatures(value: Uint8Array[]) {\n            pb_1.Message.setField(this, 3, value);\n        }\n        static fromObject(data: {\n            body_bytes?: Uint8Array;\n            auth_info_bytes?: Uint8Array;\n            signatures?: Uint8Array[];\n        }) {\n            const message = new TxRaw({});\n            if (data.body_bytes != null) {\n                message.body_bytes = data.body_bytes;\n            }\n            if (data.auth_info_bytes != null) {\n                message.auth_info_bytes = data.auth_info_bytes;\n            }\n            if (data.signatures != null) {\n                message.signatures = data.signatures;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                body_bytes?: Uint8Array;\n                auth_info_bytes?: Uint8Array;\n                signatures?: Uint8Array[];\n            } = {};\n            if (this.body_bytes != null) {\n                data.body_bytes = this.body_bytes;\n            }\n            if (this.auth_info_bytes != null) {\n                data.auth_info_bytes = this.auth_info_bytes;\n            }\n            if (this.signatures != null) {\n                data.signatures = this.signatures;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.body_bytes !== undefined)\n                writer.writeBytes(1, this.body_bytes);\n            if (this.auth_info_bytes !== undefined)\n                writer.writeBytes(2, this.auth_info_bytes);\n            if (this.signatures !== undefined)\n                writer.writeRepeatedBytes(3, this.signatures);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): TxRaw {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TxRaw();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.body_bytes = reader.readBytes();\n                        break;\n                    case 2:\n                        message.auth_info_bytes = reader.readBytes();\n                        break;\n                    case 3:\n                        pb_1.Message.addToRepeatedField(message, 3, reader.readBytes());\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): TxRaw {\n            return TxRaw.deserialize(bytes);\n        }\n    }\n    export class SignDoc extends pb_1.Message {\n        constructor(data?: any[] | {\n            body_bytes?: Uint8Array;\n            auth_info_bytes?: Uint8Array;\n            chain_id?: string;\n            account_number?: number;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"body_bytes\" in data && data.body_bytes != undefined) {\n                    this.body_bytes = data.body_bytes;\n                }\n                if (\"auth_info_bytes\" in data && data.auth_info_bytes != undefined) {\n                    this.auth_info_bytes = data.auth_info_bytes;\n                }\n                if (\"chain_id\" in data && data.chain_id != undefined) {\n                    this.chain_id = data.chain_id;\n                }\n                if (\"account_number\" in data && data.account_number != undefined) {\n                    this.account_number = data.account_number;\n                }\n            }\n        }\n        get body_bytes() {\n            return pb_1.Message.getField(this, 1) as Uint8Array;\n        }\n        set body_bytes(value: Uint8Array) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        get auth_info_bytes() {\n            return pb_1.Message.getField(this, 2) as Uint8Array;\n        }\n        set auth_info_bytes(value: Uint8Array) {\n            pb_1.Message.setField(this, 2, value);\n        }\n        get chain_id() {\n            return pb_1.Message.getField(this, 3) as string;\n        }\n        set chain_id(value: string) {\n            pb_1.Message.setField(this, 3, value);\n        }\n        get account_number() {\n            return pb_1.Message.getField(this, 4) as number;\n        }\n        set account_number(value: number) {\n            pb_1.Message.setField(this, 4, value);\n        }\n        static fromObject(data: {\n            body_bytes?: Uint8Array;\n            auth_info_bytes?: Uint8Array;\n            chain_id?: string;\n            account_number?: number;\n        }) {\n            const message = new SignDoc({});\n            if (data.body_bytes != null) {\n                message.body_bytes = data.body_bytes;\n            }\n            if (data.auth_info_bytes != null) {\n                message.auth_info_bytes = data.auth_info_bytes;\n            }\n            if (data.chain_id != null) {\n                message.chain_id = data.chain_id;\n            }\n            if (data.account_number != null) {\n                message.account_number = data.account_number;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                body_bytes?: Uint8Array;\n                auth_info_bytes?: Uint8Array;\n                chain_id?: string;\n                account_number?: number;\n            } = {};\n            if (this.body_bytes != null) {\n                data.body_bytes = this.body_bytes;\n            }\n            if (this.auth_info_bytes != null) {\n                data.auth_info_bytes = this.auth_info_bytes;\n            }\n            if (this.chain_id != null) {\n                data.chain_id = this.chain_id;\n            }\n            if (this.account_number != null) {\n                data.account_number = this.account_number;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.body_bytes !== undefined)\n                writer.writeBytes(1, this.body_bytes);\n            if (this.auth_info_bytes !== undefined)\n                writer.writeBytes(2, this.auth_info_bytes);\n            if (typeof this.chain_id === \"string\" && this.chain_id.length)\n                writer.writeString(3, this.chain_id);\n            if (this.account_number !== undefined)\n                writer.writeUint64(4, this.account_number);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SignDoc {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SignDoc();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.body_bytes = reader.readBytes();\n                        break;\n                    case 2:\n                        message.auth_info_bytes = reader.readBytes();\n                        break;\n                    case 3:\n                        message.chain_id = reader.readString();\n                        break;\n                    case 4:\n                        message.account_number = reader.readUint64();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): SignDoc {\n            return SignDoc.deserialize(bytes);\n        }\n    }\n    export class TxBody extends pb_1.Message {\n        constructor(data?: any[] | {\n            messages?: dependency_5.google.protobuf.Any[];\n            memo?: string;\n            timeout_height?: number;\n            extension_options?: dependency_5.google.protobuf.Any[];\n            non_critical_extension_options?: dependency_5.google.protobuf.Any[];\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1, 1023, 2047], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"messages\" in data && data.messages != undefined) {\n                    this.messages = data.messages;\n                }\n                if (\"memo\" in data && data.memo != undefined) {\n                    this.memo = data.memo;\n                }\n                if (\"timeout_height\" in data && data.timeout_height != undefined) {\n                    this.timeout_height = data.timeout_height;\n                }\n                if (\"extension_options\" in data && data.extension_options != undefined) {\n                    this.extension_options = data.extension_options;\n                }\n                if (\"non_critical_extension_options\" in data && data.non_critical_extension_options != undefined) {\n                    this.non_critical_extension_options = data.non_critical_extension_options;\n                }\n            }\n        }\n        get messages() {\n            return pb_1.Message.getRepeatedWrapperField(this, dependency_5.google.protobuf.Any, 1) as dependency_5.google.protobuf.Any[];\n        }\n        set messages(value: dependency_5.google.protobuf.Any[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        get memo() {\n            return pb_1.Message.getField(this, 2) as string;\n        }\n        set memo(value: string) {\n            pb_1.Message.setField(this, 2, value);\n        }\n        get timeout_height() {\n            return pb_1.Message.getField(this, 3) as number;\n        }\n        set timeout_height(value: number) {\n            pb_1.Message.setField(this, 3, value);\n        }\n        get extension_options() {\n            return pb_1.Message.getRepeatedWrapperField(this, dependency_5.google.protobuf.Any, 1023) as dependency_5.google.protobuf.Any[];\n        }\n        set extension_options(value: dependency_5.google.protobuf.Any[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1023, value);\n        }\n        get non_critical_extension_options() {\n            return pb_1.Message.getRepeatedWrapperField(this, dependency_5.google.protobuf.Any, 2047) as dependency_5.google.protobuf.Any[];\n        }\n        set non_critical_extension_options(value: dependency_5.google.protobuf.Any[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 2047, value);\n        }\n        static fromObject(data: {\n            messages?: ReturnType<typeof dependency_5.google.protobuf.Any.prototype.toObject>[];\n            memo?: string;\n            timeout_height?: number;\n            extension_options?: ReturnType<typeof dependency_5.google.protobuf.Any.prototype.toObject>[];\n            non_critical_extension_options?: ReturnType<typeof dependency_5.google.protobuf.Any.prototype.toObject>[];\n        }) {\n            const message = new TxBody({});\n            if (data.messages != null) {\n                message.messages = data.messages.map(item => dependency_5.google.protobuf.Any.fromObject(item));\n            }\n            if (data.memo != null) {\n                message.memo = data.memo;\n            }\n            if (data.timeout_height != null) {\n                message.timeout_height = data.timeout_height;\n            }\n            if (data.extension_options != null) {\n                message.extension_options = data.extension_options.map(item => dependency_5.google.protobuf.Any.fromObject(item));\n            }\n            if (data.non_critical_extension_options != null) {\n                message.non_critical_extension_options = data.non_critical_extension_options.map(item => dependency_5.google.protobuf.Any.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                messages?: ReturnType<typeof dependency_5.google.protobuf.Any.prototype.toObject>[];\n                memo?: string;\n                timeout_height?: number;\n                extension_options?: ReturnType<typeof dependency_5.google.protobuf.Any.prototype.toObject>[];\n                non_critical_extension_options?: ReturnType<typeof dependency_5.google.protobuf.Any.prototype.toObject>[];\n            } = {};\n            if (this.messages != null) {\n                data.messages = this.messages.map((item: dependency_5.google.protobuf.Any) => item.toObject());\n            }\n            if (this.memo != null) {\n                data.memo = this.memo;\n            }\n            if (this.timeout_height != null) {\n                data.timeout_height = this.timeout_height;\n            }\n            if (this.extension_options != null) {\n                data.extension_options = this.extension_options.map((item: dependency_5.google.protobuf.Any) => item.toObject());\n            }\n            if (this.non_critical_extension_options != null) {\n                data.non_critical_extension_options = this.non_critical_extension_options.map((item: dependency_5.google.protobuf.Any) => item.toObject());\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.messages !== undefined)\n                writer.writeRepeatedMessage(1, this.messages, (item: dependency_5.google.protobuf.Any) => item.serialize(writer));\n            if (typeof this.memo === \"string\" && this.memo.length)\n                writer.writeString(2, this.memo);\n            if (this.timeout_height !== undefined)\n                writer.writeUint64(3, this.timeout_height);\n            if (this.extension_options !== undefined)\n                writer.writeRepeatedMessage(1023, this.extension_options, (item: dependency_5.google.protobuf.Any) => item.serialize(writer));\n            if (this.non_critical_extension_options !== undefined)\n                writer.writeRepeatedMessage(2047, this.non_critical_extension_options, (item: dependency_5.google.protobuf.Any) => item.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): TxBody {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TxBody();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.messages, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_5.google.protobuf.Any.deserialize(reader), dependency_5.google.protobuf.Any));\n                        break;\n                    case 2:\n                        message.memo = reader.readString();\n                        break;\n                    case 3:\n                        message.timeout_height = reader.readUint64();\n                        break;\n                    case 1023:\n                        reader.readMessage(message.extension_options, () => pb_1.Message.addToRepeatedWrapperField(message, 1023, dependency_5.google.protobuf.Any.deserialize(reader), dependency_5.google.protobuf.Any));\n                        break;\n                    case 2047:\n                        reader.readMessage(message.non_critical_extension_options, () => pb_1.Message.addToRepeatedWrapperField(message, 2047, dependency_5.google.protobuf.Any.deserialize(reader), dependency_5.google.protobuf.Any));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): TxBody {\n            return TxBody.deserialize(bytes);\n        }\n    }\n    export class AuthInfo extends pb_1.Message {\n        constructor(data?: any[] | {\n            signer_infos?: SignerInfo[];\n            fee?: Fee;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"signer_infos\" in data && data.signer_infos != undefined) {\n                    this.signer_infos = data.signer_infos;\n                }\n                if (\"fee\" in data && data.fee != undefined) {\n                    this.fee = data.fee;\n                }\n            }\n        }\n        get signer_infos() {\n            return pb_1.Message.getRepeatedWrapperField(this, SignerInfo, 1) as SignerInfo[];\n        }\n        set signer_infos(value: SignerInfo[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        get fee() {\n            return pb_1.Message.getWrapperField(this, Fee, 2) as Fee;\n        }\n        set fee(value: Fee) {\n            pb_1.Message.setWrapperField(this, 2, value);\n        }\n        static fromObject(data: {\n            signer_infos?: ReturnType<typeof SignerInfo.prototype.toObject>[];\n            fee?: ReturnType<typeof Fee.prototype.toObject>;\n        }) {\n            const message = new AuthInfo({});\n            if (data.signer_infos != null) {\n                message.signer_infos = data.signer_infos.map(item => SignerInfo.fromObject(item));\n            }\n            if (data.fee != null) {\n                message.fee = Fee.fromObject(data.fee);\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                signer_infos?: ReturnType<typeof SignerInfo.prototype.toObject>[];\n                fee?: ReturnType<typeof Fee.prototype.toObject>;\n            } = {};\n            if (this.signer_infos != null) {\n                data.signer_infos = this.signer_infos.map((item: SignerInfo) => item.toObject());\n            }\n            if (this.fee != null) {\n                data.fee = this.fee.toObject();\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.signer_infos !== undefined)\n                writer.writeRepeatedMessage(1, this.signer_infos, (item: SignerInfo) => item.serialize(writer));\n            if (this.fee !== undefined)\n                writer.writeMessage(2, this.fee, () => this.fee.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AuthInfo {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AuthInfo();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.signer_infos, () => pb_1.Message.addToRepeatedWrapperField(message, 1, SignerInfo.deserialize(reader), SignerInfo));\n                        break;\n                    case 2:\n                        reader.readMessage(message.fee, () => message.fee = Fee.deserialize(reader));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): AuthInfo {\n            return AuthInfo.deserialize(bytes);\n        }\n    }\n    export class SignerInfo extends pb_1.Message {\n        constructor(data?: any[] | {\n            public_key?: dependency_5.google.protobuf.Any;\n            mode_info?: ModeInfo;\n            sequence?: number;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"public_key\" in data && data.public_key != undefined) {\n                    this.public_key = data.public_key;\n                }\n                if (\"mode_info\" in data && data.mode_info != undefined) {\n                    this.mode_info = data.mode_info;\n                }\n                if (\"sequence\" in data && data.sequence != undefined) {\n                    this.sequence = data.sequence;\n                }\n            }\n        }\n        get public_key() {\n            return pb_1.Message.getWrapperField(this, dependency_5.google.protobuf.Any, 1) as dependency_5.google.protobuf.Any;\n        }\n        set public_key(value: dependency_5.google.protobuf.Any) {\n            pb_1.Message.setWrapperField(this, 1, value);\n        }\n        get mode_info() {\n            return pb_1.Message.getWrapperField(this, ModeInfo, 2) as ModeInfo;\n        }\n        set mode_info(value: ModeInfo) {\n            pb_1.Message.setWrapperField(this, 2, value);\n        }\n        get sequence() {\n            return pb_1.Message.getField(this, 3) as number;\n        }\n        set sequence(value: number) {\n            pb_1.Message.setField(this, 3, value);\n        }\n        static fromObject(data: {\n            public_key?: ReturnType<typeof dependency_5.google.protobuf.Any.prototype.toObject>;\n            mode_info?: ReturnType<typeof ModeInfo.prototype.toObject>;\n            sequence?: number;\n        }) {\n            const message = new SignerInfo({});\n            if (data.public_key != null) {\n                message.public_key = dependency_5.google.protobuf.Any.fromObject(data.public_key);\n            }\n            if (data.mode_info != null) {\n                message.mode_info = ModeInfo.fromObject(data.mode_info);\n            }\n            if (data.sequence != null) {\n                message.sequence = data.sequence;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                public_key?: ReturnType<typeof dependency_5.google.protobuf.Any.prototype.toObject>;\n                mode_info?: ReturnType<typeof ModeInfo.prototype.toObject>;\n                sequence?: number;\n            } = {};\n            if (this.public_key != null) {\n                data.public_key = this.public_key.toObject();\n            }\n            if (this.mode_info != null) {\n                data.mode_info = this.mode_info.toObject();\n            }\n            if (this.sequence != null) {\n                data.sequence = this.sequence;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.public_key !== undefined)\n                writer.writeMessage(1, this.public_key, () => this.public_key.serialize(writer));\n            if (this.mode_info !== undefined)\n                writer.writeMessage(2, this.mode_info, () => this.mode_info.serialize(writer));\n            if (this.sequence !== undefined)\n                writer.writeUint64(3, this.sequence);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SignerInfo {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SignerInfo();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.public_key, () => message.public_key = dependency_5.google.protobuf.Any.deserialize(reader));\n                        break;\n                    case 2:\n                        reader.readMessage(message.mode_info, () => message.mode_info = ModeInfo.deserialize(reader));\n                        break;\n                    case 3:\n                        message.sequence = reader.readUint64();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): SignerInfo {\n            return SignerInfo.deserialize(bytes);\n        }\n    }\n    export class ModeInfo extends pb_1.Message {\n        constructor(data?: any[] | ({} & (({\n            single?: ModeInfo.Single;\n            multi?: never;\n        } | {\n            single?: never;\n            multi?: ModeInfo.Multi;\n        })))) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], [[1, 2]]);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"single\" in data && data.single != undefined) {\n                    this.single = data.single;\n                }\n                if (\"multi\" in data && data.multi != undefined) {\n                    this.multi = data.multi;\n                }\n            }\n        }\n        get single() {\n            return pb_1.Message.getWrapperField(this, ModeInfo.Single, 1) as ModeInfo.Single;\n        }\n        set single(value: ModeInfo.Single) {\n            pb_1.Message.setOneofWrapperField(this, 1, [1, 2], value);\n        }\n        get multi() {\n            return pb_1.Message.getWrapperField(this, ModeInfo.Multi, 2) as ModeInfo.Multi;\n        }\n        set multi(value: ModeInfo.Multi) {\n            pb_1.Message.setOneofWrapperField(this, 2, [1, 2], value);\n        }\n        get sum() {\n            const cases: {\n                [index: number]: \"none\" | \"single\" | \"multi\";\n            } = {\n                0: \"none\",\n                1: \"single\",\n                2: \"multi\"\n            };\n            return cases[pb_1.Message.computeOneofCase(this, [1, 2])];\n        }\n        static fromObject(data: {\n            single?: ReturnType<typeof ModeInfo.Single.prototype.toObject>;\n            multi?: ReturnType<typeof ModeInfo.Multi.prototype.toObject>;\n        }) {\n            const message = new ModeInfo({});\n            if (data.single != null) {\n                message.single = ModeInfo.Single.fromObject(data.single);\n            }\n            if (data.multi != null) {\n                message.multi = ModeInfo.Multi.fromObject(data.multi);\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                single?: ReturnType<typeof ModeInfo.Single.prototype.toObject>;\n                multi?: ReturnType<typeof ModeInfo.Multi.prototype.toObject>;\n            } = {};\n            if (this.single != null) {\n                data.single = this.single.toObject();\n            }\n            if (this.multi != null) {\n                data.multi = this.multi.toObject();\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.single !== undefined)\n                writer.writeMessage(1, this.single, () => this.single.serialize(writer));\n            if (this.multi !== undefined)\n                writer.writeMessage(2, this.multi, () => this.multi.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ModeInfo {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ModeInfo();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.single, () => message.single = ModeInfo.Single.deserialize(reader));\n                        break;\n                    case 2:\n                        reader.readMessage(message.multi, () => message.multi = ModeInfo.Multi.deserialize(reader));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ModeInfo {\n            return ModeInfo.deserialize(bytes);\n        }\n    }\n    export namespace ModeInfo {\n        export class Single extends pb_1.Message {\n            constructor(data?: any[] | {\n                mode?: dependency_4.cosmos.tx.signing.v1beta1.SignMode;\n            }) {\n                super();\n                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);\n                if (!Array.isArray(data) && typeof data == \"object\") {\n                    if (\"mode\" in data && data.mode != undefined) {\n                        this.mode = data.mode;\n                    }\n                }\n            }\n            get mode() {\n                return pb_1.Message.getField(this, 1) as dependency_4.cosmos.tx.signing.v1beta1.SignMode;\n            }\n            set mode(value: dependency_4.cosmos.tx.signing.v1beta1.SignMode) {\n                pb_1.Message.setField(this, 1, value);\n            }\n            static fromObject(data: {\n                mode?: dependency_4.cosmos.tx.signing.v1beta1.SignMode;\n            }) {\n                const message = new Single({});\n                if (data.mode != null) {\n                    message.mode = data.mode;\n                }\n                return message;\n            }\n            toObject() {\n                const data: {\n                    mode?: dependency_4.cosmos.tx.signing.v1beta1.SignMode;\n                } = {};\n                if (this.mode != null) {\n                    data.mode = this.mode;\n                }\n                return data;\n            }\n            serialize(): Uint8Array;\n            serialize(w: pb_1.BinaryWriter): void;\n            serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n                const writer = w || new pb_1.BinaryWriter();\n                if (this.mode !== undefined)\n                    writer.writeEnum(1, this.mode);\n                if (!w)\n                    return writer.getResultBuffer();\n            }\n            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Single {\n                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Single();\n                while (reader.nextField()) {\n                    if (reader.isEndGroup())\n                        break;\n                    switch (reader.getFieldNumber()) {\n                        case 1:\n                            message.mode = reader.readEnum();\n                            break;\n                        default: reader.skipField();\n                    }\n                }\n                return message;\n            }\n            serializeBinary(): Uint8Array {\n                return this.serialize();\n            }\n            static deserializeBinary(bytes: Uint8Array): Single {\n                return Single.deserialize(bytes);\n            }\n        }\n        export class Multi extends pb_1.Message {\n            constructor(data?: any[] | {\n                bitarray?: dependency_2.cosmos.crypto.multisig.v1beta1.CompactBitArray;\n                mode_infos?: ModeInfo[];\n            }) {\n                super();\n                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], []);\n                if (!Array.isArray(data) && typeof data == \"object\") {\n                    if (\"bitarray\" in data && data.bitarray != undefined) {\n                        this.bitarray = data.bitarray;\n                    }\n                    if (\"mode_infos\" in data && data.mode_infos != undefined) {\n                        this.mode_infos = data.mode_infos;\n                    }\n                }\n            }\n            get bitarray() {\n                return pb_1.Message.getWrapperField(this, dependency_2.cosmos.crypto.multisig.v1beta1.CompactBitArray, 1) as dependency_2.cosmos.crypto.multisig.v1beta1.CompactBitArray;\n            }\n            set bitarray(value: dependency_2.cosmos.crypto.multisig.v1beta1.CompactBitArray) {\n                pb_1.Message.setWrapperField(this, 1, value);\n            }\n            get mode_infos() {\n                return pb_1.Message.getRepeatedWrapperField(this, ModeInfo, 2) as ModeInfo[];\n            }\n            set mode_infos(value: ModeInfo[]) {\n                pb_1.Message.setRepeatedWrapperField(this, 2, value);\n            }\n            static fromObject(data: {\n                bitarray?: ReturnType<typeof dependency_2.cosmos.crypto.multisig.v1beta1.CompactBitArray.prototype.toObject>;\n                mode_infos?: ReturnType<typeof ModeInfo.prototype.toObject>[];\n            }) {\n                const message = new Multi({});\n                if (data.bitarray != null) {\n                    message.bitarray = dependency_2.cosmos.crypto.multisig.v1beta1.CompactBitArray.fromObject(data.bitarray);\n                }\n                if (data.mode_infos != null) {\n                    message.mode_infos = data.mode_infos.map(item => ModeInfo.fromObject(item));\n                }\n                return message;\n            }\n            toObject() {\n                const data: {\n                    bitarray?: ReturnType<typeof dependency_2.cosmos.crypto.multisig.v1beta1.CompactBitArray.prototype.toObject>;\n                    mode_infos?: ReturnType<typeof ModeInfo.prototype.toObject>[];\n                } = {};\n                if (this.bitarray != null) {\n                    data.bitarray = this.bitarray.toObject();\n                }\n                if (this.mode_infos != null) {\n                    data.mode_infos = this.mode_infos.map((item: ModeInfo) => item.toObject());\n                }\n                return data;\n            }\n            serialize(): Uint8Array;\n            serialize(w: pb_1.BinaryWriter): void;\n            serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n                const writer = w || new pb_1.BinaryWriter();\n                if (this.bitarray !== undefined)\n                    writer.writeMessage(1, this.bitarray, () => this.bitarray.serialize(writer));\n                if (this.mode_infos !== undefined)\n                    writer.writeRepeatedMessage(2, this.mode_infos, (item: ModeInfo) => item.serialize(writer));\n                if (!w)\n                    return writer.getResultBuffer();\n            }\n            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Multi {\n                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Multi();\n                while (reader.nextField()) {\n                    if (reader.isEndGroup())\n                        break;\n                    switch (reader.getFieldNumber()) {\n                        case 1:\n                            reader.readMessage(message.bitarray, () => message.bitarray = dependency_2.cosmos.crypto.multisig.v1beta1.CompactBitArray.deserialize(reader));\n                            break;\n                        case 2:\n                            reader.readMessage(message.mode_infos, () => pb_1.Message.addToRepeatedWrapperField(message, 2, ModeInfo.deserialize(reader), ModeInfo));\n                            break;\n                        default: reader.skipField();\n                    }\n                }\n                return message;\n            }\n            serializeBinary(): Uint8Array {\n                return this.serialize();\n            }\n            static deserializeBinary(bytes: Uint8Array): Multi {\n                return Multi.deserialize(bytes);\n            }\n        }\n    }\n    export class Fee extends pb_1.Message {\n        constructor(data?: any[] | {\n            amount?: dependency_3.cosmos.base.v1beta1.Coin[];\n            gas_limit?: number;\n            payer?: string;\n            granter?: string;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"amount\" in data && data.amount != undefined) {\n                    this.amount = data.amount;\n                }\n                if (\"gas_limit\" in data && data.gas_limit != undefined) {\n                    this.gas_limit = data.gas_limit;\n                }\n                if (\"payer\" in data && data.payer != undefined) {\n                    this.payer = data.payer;\n                }\n                if (\"granter\" in data && data.granter != undefined) {\n                    this.granter = data.granter;\n                }\n            }\n        }\n        get amount() {\n            return pb_1.Message.getRepeatedWrapperField(this, dependency_3.cosmos.base.v1beta1.Coin, 1) as dependency_3.cosmos.base.v1beta1.Coin[];\n        }\n        set amount(value: dependency_3.cosmos.base.v1beta1.Coin[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        get gas_limit() {\n            return pb_1.Message.getField(this, 2) as number;\n        }\n        set gas_limit(value: number) {\n            pb_1.Message.setField(this, 2, value);\n        }\n        get payer() {\n            return pb_1.Message.getField(this, 3) as string;\n        }\n        set payer(value: string) {\n            pb_1.Message.setField(this, 3, value);\n        }\n        get granter() {\n            return pb_1.Message.getField(this, 4) as string;\n        }\n        set granter(value: string) {\n            pb_1.Message.setField(this, 4, value);\n        }\n        static fromObject(data: {\n            amount?: ReturnType<typeof dependency_3.cosmos.base.v1beta1.Coin.prototype.toObject>[];\n            gas_limit?: number;\n            payer?: string;\n            granter?: string;\n        }) {\n            const message = new Fee({});\n            if (data.amount != null) {\n                message.amount = data.amount.map(item => dependency_3.cosmos.base.v1beta1.Coin.fromObject(item));\n            }\n            if (data.gas_limit != null) {\n                message.gas_limit = data.gas_limit;\n            }\n            if (data.payer != null) {\n                message.payer = data.payer;\n            }\n            if (data.granter != null) {\n                message.granter = data.granter;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                amount?: ReturnType<typeof dependency_3.cosmos.base.v1beta1.Coin.prototype.toObject>[];\n                gas_limit?: number;\n                payer?: string;\n                granter?: string;\n            } = {};\n            if (this.amount != null) {\n                data.amount = this.amount.map((item: dependency_3.cosmos.base.v1beta1.Coin) => item.toObject());\n            }\n            if (this.gas_limit != null) {\n                data.gas_limit = this.gas_limit;\n            }\n            if (this.payer != null) {\n                data.payer = this.payer;\n            }\n            if (this.granter != null) {\n                data.granter = this.granter;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.amount !== undefined)\n                writer.writeRepeatedMessage(1, this.amount, (item: dependency_3.cosmos.base.v1beta1.Coin) => item.serialize(writer));\n            if (this.gas_limit !== undefined)\n                writer.writeUint64(2, this.gas_limit);\n            if (typeof this.payer === \"string\" && this.payer.length)\n                writer.writeString(3, this.payer);\n            if (typeof this.granter === \"string\" && this.granter.length)\n                writer.writeString(4, this.granter);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Fee {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Fee();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.amount, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_3.cosmos.base.v1beta1.Coin.deserialize(reader), dependency_3.cosmos.base.v1beta1.Coin));\n                        break;\n                    case 2:\n                        message.gas_limit = reader.readUint64();\n                        break;\n                    case 3:\n                        message.payer = reader.readString();\n                        break;\n                    case 4:\n                        message.granter = reader.readString();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): Fee {\n            return Fee.deserialize(bytes);\n        }\n    }\n}\n","/**\n * Generated by the protoc-gen-ts.  DO NOT EDIT!\n * compiler version: 3.17.3\n * source: cosmos/tx/signing/v1beta1/signing.proto\n * git: https://github.com/thesayyn/protoc-gen-ts\n *  */\nimport * as dependency_1 from \"./../../../crypto/multisig/v1beta1/multisig\";\nimport * as dependency_2 from \"./../../../../google/protobuf/any\";\nimport * as pb_1 from \"google-protobuf\";\nexport namespace cosmos.tx.signing.v1beta1 {\n    export enum SignMode {\n        SIGN_MODE_UNSPECIFIED = 0,\n        SIGN_MODE_DIRECT = 1,\n        SIGN_MODE_TEXTUAL = 2,\n        SIGN_MODE_LEGACY_AMINO_JSON = 127\n    }\n    export class SignatureDescriptors extends pb_1.Message {\n        constructor(data?: any[] | {\n            signatures?: SignatureDescriptor[];\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"signatures\" in data && data.signatures != undefined) {\n                    this.signatures = data.signatures;\n                }\n            }\n        }\n        get signatures() {\n            return pb_1.Message.getRepeatedWrapperField(this, SignatureDescriptor, 1) as SignatureDescriptor[];\n        }\n        set signatures(value: SignatureDescriptor[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        static fromObject(data: {\n            signatures?: ReturnType<typeof SignatureDescriptor.prototype.toObject>[];\n        }) {\n            const message = new SignatureDescriptors({});\n            if (data.signatures != null) {\n                message.signatures = data.signatures.map(item => SignatureDescriptor.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                signatures?: ReturnType<typeof SignatureDescriptor.prototype.toObject>[];\n            } = {};\n            if (this.signatures != null) {\n                data.signatures = this.signatures.map((item: SignatureDescriptor) => item.toObject());\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.signatures !== undefined)\n                writer.writeRepeatedMessage(1, this.signatures, (item: SignatureDescriptor) => item.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SignatureDescriptors {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SignatureDescriptors();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.signatures, () => pb_1.Message.addToRepeatedWrapperField(message, 1, SignatureDescriptor.deserialize(reader), SignatureDescriptor));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): SignatureDescriptors {\n            return SignatureDescriptors.deserialize(bytes);\n        }\n    }\n    export class SignatureDescriptor extends pb_1.Message {\n        constructor(data?: any[] | {\n            public_key?: dependency_2.google.protobuf.Any;\n            data?: SignatureDescriptor.Data;\n            sequence?: number;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"public_key\" in data && data.public_key != undefined) {\n                    this.public_key = data.public_key;\n                }\n                if (\"data\" in data && data.data != undefined) {\n                    this.data = data.data;\n                }\n                if (\"sequence\" in data && data.sequence != undefined) {\n                    this.sequence = data.sequence;\n                }\n            }\n        }\n        get public_key() {\n            return pb_1.Message.getWrapperField(this, dependency_2.google.protobuf.Any, 1) as dependency_2.google.protobuf.Any;\n        }\n        set public_key(value: dependency_2.google.protobuf.Any) {\n            pb_1.Message.setWrapperField(this, 1, value);\n        }\n        get data() {\n            return pb_1.Message.getWrapperField(this, SignatureDescriptor.Data, 2) as SignatureDescriptor.Data;\n        }\n        set data(value: SignatureDescriptor.Data) {\n            pb_1.Message.setWrapperField(this, 2, value);\n        }\n        get sequence() {\n            return pb_1.Message.getField(this, 3) as number;\n        }\n        set sequence(value: number) {\n            pb_1.Message.setField(this, 3, value);\n        }\n        static fromObject(data: {\n            public_key?: ReturnType<typeof dependency_2.google.protobuf.Any.prototype.toObject>;\n            data?: ReturnType<typeof SignatureDescriptor.Data.prototype.toObject>;\n            sequence?: number;\n        }) {\n            const message = new SignatureDescriptor({});\n            if (data.public_key != null) {\n                message.public_key = dependency_2.google.protobuf.Any.fromObject(data.public_key);\n            }\n            if (data.data != null) {\n                message.data = SignatureDescriptor.Data.fromObject(data.data);\n            }\n            if (data.sequence != null) {\n                message.sequence = data.sequence;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                public_key?: ReturnType<typeof dependency_2.google.protobuf.Any.prototype.toObject>;\n                data?: ReturnType<typeof SignatureDescriptor.Data.prototype.toObject>;\n                sequence?: number;\n            } = {};\n            if (this.public_key != null) {\n                data.public_key = this.public_key.toObject();\n            }\n            if (this.data != null) {\n                data.data = this.data.toObject();\n            }\n            if (this.sequence != null) {\n                data.sequence = this.sequence;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.public_key !== undefined)\n                writer.writeMessage(1, this.public_key, () => this.public_key.serialize(writer));\n            if (this.data !== undefined)\n                writer.writeMessage(2, this.data, () => this.data.serialize(writer));\n            if (this.sequence !== undefined)\n                writer.writeUint64(3, this.sequence);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SignatureDescriptor {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SignatureDescriptor();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.public_key, () => message.public_key = dependency_2.google.protobuf.Any.deserialize(reader));\n                        break;\n                    case 2:\n                        reader.readMessage(message.data, () => message.data = SignatureDescriptor.Data.deserialize(reader));\n                        break;\n                    case 3:\n                        message.sequence = reader.readUint64();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): SignatureDescriptor {\n            return SignatureDescriptor.deserialize(bytes);\n        }\n    }\n    export namespace SignatureDescriptor {\n        export class Data extends pb_1.Message {\n            constructor(data?: any[] | ({} & (({\n                single?: SignatureDescriptor.Data.Single;\n                multi?: never;\n            } | {\n                single?: never;\n                multi?: SignatureDescriptor.Data.Multi;\n            })))) {\n                super();\n                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], [[1, 2]]);\n                if (!Array.isArray(data) && typeof data == \"object\") {\n                    if (\"single\" in data && data.single != undefined) {\n                        this.single = data.single;\n                    }\n                    if (\"multi\" in data && data.multi != undefined) {\n                        this.multi = data.multi;\n                    }\n                }\n            }\n            get single() {\n                return pb_1.Message.getWrapperField(this, SignatureDescriptor.Data.Single, 1) as SignatureDescriptor.Data.Single;\n            }\n            set single(value: SignatureDescriptor.Data.Single) {\n                pb_1.Message.setOneofWrapperField(this, 1, [1, 2], value);\n            }\n            get multi() {\n                return pb_1.Message.getWrapperField(this, SignatureDescriptor.Data.Multi, 2) as SignatureDescriptor.Data.Multi;\n            }\n            set multi(value: SignatureDescriptor.Data.Multi) {\n                pb_1.Message.setOneofWrapperField(this, 2, [1, 2], value);\n            }\n            get sum() {\n                const cases: {\n                    [index: number]: \"none\" | \"single\" | \"multi\";\n                } = {\n                    0: \"none\",\n                    1: \"single\",\n                    2: \"multi\"\n                };\n                return cases[pb_1.Message.computeOneofCase(this, [1, 2])];\n            }\n            static fromObject(data: {\n                single?: ReturnType<typeof SignatureDescriptor.Data.Single.prototype.toObject>;\n                multi?: ReturnType<typeof SignatureDescriptor.Data.Multi.prototype.toObject>;\n            }) {\n                const message = new Data({});\n                if (data.single != null) {\n                    message.single = SignatureDescriptor.Data.Single.fromObject(data.single);\n                }\n                if (data.multi != null) {\n                    message.multi = SignatureDescriptor.Data.Multi.fromObject(data.multi);\n                }\n                return message;\n            }\n            toObject() {\n                const data: {\n                    single?: ReturnType<typeof SignatureDescriptor.Data.Single.prototype.toObject>;\n                    multi?: ReturnType<typeof SignatureDescriptor.Data.Multi.prototype.toObject>;\n                } = {};\n                if (this.single != null) {\n                    data.single = this.single.toObject();\n                }\n                if (this.multi != null) {\n                    data.multi = this.multi.toObject();\n                }\n                return data;\n            }\n            serialize(): Uint8Array;\n            serialize(w: pb_1.BinaryWriter): void;\n            serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n                const writer = w || new pb_1.BinaryWriter();\n                if (this.single !== undefined)\n                    writer.writeMessage(1, this.single, () => this.single.serialize(writer));\n                if (this.multi !== undefined)\n                    writer.writeMessage(2, this.multi, () => this.multi.serialize(writer));\n                if (!w)\n                    return writer.getResultBuffer();\n            }\n            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Data {\n                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Data();\n                while (reader.nextField()) {\n                    if (reader.isEndGroup())\n                        break;\n                    switch (reader.getFieldNumber()) {\n                        case 1:\n                            reader.readMessage(message.single, () => message.single = SignatureDescriptor.Data.Single.deserialize(reader));\n                            break;\n                        case 2:\n                            reader.readMessage(message.multi, () => message.multi = SignatureDescriptor.Data.Multi.deserialize(reader));\n                            break;\n                        default: reader.skipField();\n                    }\n                }\n                return message;\n            }\n            serializeBinary(): Uint8Array {\n                return this.serialize();\n            }\n            static deserializeBinary(bytes: Uint8Array): Data {\n                return Data.deserialize(bytes);\n            }\n        }\n        export namespace Data {\n            export class Single extends pb_1.Message {\n                constructor(data?: any[] | {\n                    mode?: SignMode;\n                    signature?: Uint8Array;\n                }) {\n                    super();\n                    pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);\n                    if (!Array.isArray(data) && typeof data == \"object\") {\n                        if (\"mode\" in data && data.mode != undefined) {\n                            this.mode = data.mode;\n                        }\n                        if (\"signature\" in data && data.signature != undefined) {\n                            this.signature = data.signature;\n                        }\n                    }\n                }\n                get mode() {\n                    return pb_1.Message.getField(this, 1) as SignMode;\n                }\n                set mode(value: SignMode) {\n                    pb_1.Message.setField(this, 1, value);\n                }\n                get signature() {\n                    return pb_1.Message.getField(this, 2) as Uint8Array;\n                }\n                set signature(value: Uint8Array) {\n                    pb_1.Message.setField(this, 2, value);\n                }\n                static fromObject(data: {\n                    mode?: SignMode;\n                    signature?: Uint8Array;\n                }) {\n                    const message = new Single({});\n                    if (data.mode != null) {\n                        message.mode = data.mode;\n                    }\n                    if (data.signature != null) {\n                        message.signature = data.signature;\n                    }\n                    return message;\n                }\n                toObject() {\n                    const data: {\n                        mode?: SignMode;\n                        signature?: Uint8Array;\n                    } = {};\n                    if (this.mode != null) {\n                        data.mode = this.mode;\n                    }\n                    if (this.signature != null) {\n                        data.signature = this.signature;\n                    }\n                    return data;\n                }\n                serialize(): Uint8Array;\n                serialize(w: pb_1.BinaryWriter): void;\n                serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n                    const writer = w || new pb_1.BinaryWriter();\n                    if (this.mode !== undefined)\n                        writer.writeEnum(1, this.mode);\n                    if (this.signature !== undefined)\n                        writer.writeBytes(2, this.signature);\n                    if (!w)\n                        return writer.getResultBuffer();\n                }\n                static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Single {\n                    const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Single();\n                    while (reader.nextField()) {\n                        if (reader.isEndGroup())\n                            break;\n                        switch (reader.getFieldNumber()) {\n                            case 1:\n                                message.mode = reader.readEnum();\n                                break;\n                            case 2:\n                                message.signature = reader.readBytes();\n                                break;\n                            default: reader.skipField();\n                        }\n                    }\n                    return message;\n                }\n                serializeBinary(): Uint8Array {\n                    return this.serialize();\n                }\n                static deserializeBinary(bytes: Uint8Array): Single {\n                    return Single.deserialize(bytes);\n                }\n            }\n            export class Multi extends pb_1.Message {\n                constructor(data?: any[] | {\n                    bitarray?: dependency_1.cosmos.crypto.multisig.v1beta1.CompactBitArray;\n                    signatures?: SignatureDescriptor.Data[];\n                }) {\n                    super();\n                    pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], []);\n                    if (!Array.isArray(data) && typeof data == \"object\") {\n                        if (\"bitarray\" in data && data.bitarray != undefined) {\n                            this.bitarray = data.bitarray;\n                        }\n                        if (\"signatures\" in data && data.signatures != undefined) {\n                            this.signatures = data.signatures;\n                        }\n                    }\n                }\n                get bitarray() {\n                    return pb_1.Message.getWrapperField(this, dependency_1.cosmos.crypto.multisig.v1beta1.CompactBitArray, 1) as dependency_1.cosmos.crypto.multisig.v1beta1.CompactBitArray;\n                }\n                set bitarray(value: dependency_1.cosmos.crypto.multisig.v1beta1.CompactBitArray) {\n                    pb_1.Message.setWrapperField(this, 1, value);\n                }\n                get signatures() {\n                    return pb_1.Message.getRepeatedWrapperField(this, SignatureDescriptor.Data, 2) as SignatureDescriptor.Data[];\n                }\n                set signatures(value: SignatureDescriptor.Data[]) {\n                    pb_1.Message.setRepeatedWrapperField(this, 2, value);\n                }\n                static fromObject(data: {\n                    bitarray?: ReturnType<typeof dependency_1.cosmos.crypto.multisig.v1beta1.CompactBitArray.prototype.toObject>;\n                    signatures?: ReturnType<typeof SignatureDescriptor.Data.prototype.toObject>[];\n                }) {\n                    const message = new Multi({});\n                    if (data.bitarray != null) {\n                        message.bitarray = dependency_1.cosmos.crypto.multisig.v1beta1.CompactBitArray.fromObject(data.bitarray);\n                    }\n                    if (data.signatures != null) {\n                        message.signatures = data.signatures.map(item => SignatureDescriptor.Data.fromObject(item));\n                    }\n                    return message;\n                }\n                toObject() {\n                    const data: {\n                        bitarray?: ReturnType<typeof dependency_1.cosmos.crypto.multisig.v1beta1.CompactBitArray.prototype.toObject>;\n                        signatures?: ReturnType<typeof SignatureDescriptor.Data.prototype.toObject>[];\n                    } = {};\n                    if (this.bitarray != null) {\n                        data.bitarray = this.bitarray.toObject();\n                    }\n                    if (this.signatures != null) {\n                        data.signatures = this.signatures.map((item: SignatureDescriptor.Data) => item.toObject());\n                    }\n                    return data;\n                }\n                serialize(): Uint8Array;\n                serialize(w: pb_1.BinaryWriter): void;\n                serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n                    const writer = w || new pb_1.BinaryWriter();\n                    if (this.bitarray !== undefined)\n                        writer.writeMessage(1, this.bitarray, () => this.bitarray.serialize(writer));\n                    if (this.signatures !== undefined)\n                        writer.writeRepeatedMessage(2, this.signatures, (item: SignatureDescriptor.Data) => item.serialize(writer));\n                    if (!w)\n                        return writer.getResultBuffer();\n                }\n                static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Multi {\n                    const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Multi();\n                    while (reader.nextField()) {\n                        if (reader.isEndGroup())\n                            break;\n                        switch (reader.getFieldNumber()) {\n                            case 1:\n                                reader.readMessage(message.bitarray, () => message.bitarray = dependency_1.cosmos.crypto.multisig.v1beta1.CompactBitArray.deserialize(reader));\n                                break;\n                            case 2:\n                                reader.readMessage(message.signatures, () => pb_1.Message.addToRepeatedWrapperField(message, 2, SignatureDescriptor.Data.deserialize(reader), SignatureDescriptor.Data));\n                                break;\n                            default: reader.skipField();\n                        }\n                    }\n                    return message;\n                }\n                serializeBinary(): Uint8Array {\n                    return this.serialize();\n                }\n                static deserializeBinary(bytes: Uint8Array): Multi {\n                    return Multi.deserialize(bytes);\n                }\n            }\n        }\n    }\n}\n","/**\n * Generated by the protoc-gen-ts.  DO NOT EDIT!\n * compiler version: 3.17.3\n * source: ethermint/crypto/v1/ethsecp256k1/keys.proto\n * git: https://github.com/thesayyn/protoc-gen-ts\n *  */\nimport * as dependency_1 from \"./../../../../gogoproto/gogo\";\nimport * as pb_1 from \"google-protobuf\";\nexport namespace ethermint.crypto.v1.ethsecp256k1 {\n    export class PubKey extends pb_1.Message {\n        constructor(data?: any[] | {\n            key?: Uint8Array;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"key\" in data && data.key != undefined) {\n                    this.key = data.key;\n                }\n            }\n        }\n        get key() {\n            return pb_1.Message.getField(this, 1) as Uint8Array;\n        }\n        set key(value: Uint8Array) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        static fromObject(data: {\n            key?: Uint8Array;\n        }) {\n            const message = new PubKey({});\n            if (data.key != null) {\n                message.key = data.key;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                key?: Uint8Array;\n            } = {};\n            if (this.key != null) {\n                data.key = this.key;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.key !== undefined)\n                writer.writeBytes(1, this.key);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): PubKey {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PubKey();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.key = reader.readBytes();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): PubKey {\n            return PubKey.deserialize(bytes);\n        }\n    }\n    export class PrivKey extends pb_1.Message {\n        constructor(data?: any[] | {\n            key?: Uint8Array;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"key\" in data && data.key != undefined) {\n                    this.key = data.key;\n                }\n            }\n        }\n        get key() {\n            return pb_1.Message.getField(this, 1) as Uint8Array;\n        }\n        set key(value: Uint8Array) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        static fromObject(data: {\n            key?: Uint8Array;\n        }) {\n            const message = new PrivKey({});\n            if (data.key != null) {\n                message.key = data.key;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                key?: Uint8Array;\n            } = {};\n            if (this.key != null) {\n                data.key = this.key;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.key !== undefined)\n                writer.writeBytes(1, this.key);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): PrivKey {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PrivKey();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.key = reader.readBytes();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): PrivKey {\n            return PrivKey.deserialize(bytes);\n        }\n    }\n}\n","/**\n * Generated by the protoc-gen-ts.  DO NOT EDIT!\n * compiler version: 3.17.3\n * source: cosmos/crypto/secp256k1/keys.proto\n * git: https://github.com/thesayyn/protoc-gen-ts\n *  */\nimport * as dependency_1 from \"./../../../gogoproto/gogo\";\nimport * as pb_1 from \"google-protobuf\";\nexport namespace cosmos.crypto.secp256k1 {\n    export class PubKey extends pb_1.Message {\n        constructor(data?: any[] | {\n            key?: Uint8Array;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"key\" in data && data.key != undefined) {\n                    this.key = data.key;\n                }\n            }\n        }\n        get key() {\n            return pb_1.Message.getField(this, 1) as Uint8Array;\n        }\n        set key(value: Uint8Array) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        static fromObject(data: {\n            key?: Uint8Array;\n        }) {\n            const message = new PubKey({});\n            if (data.key != null) {\n                message.key = data.key;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                key?: Uint8Array;\n            } = {};\n            if (this.key != null) {\n                data.key = this.key;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.key !== undefined)\n                writer.writeBytes(1, this.key);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): PubKey {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PubKey();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.key = reader.readBytes();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): PubKey {\n            return PubKey.deserialize(bytes);\n        }\n    }\n    export class PrivKey extends pb_1.Message {\n        constructor(data?: any[] | {\n            key?: Uint8Array;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"key\" in data && data.key != undefined) {\n                    this.key = data.key;\n                }\n            }\n        }\n        get key() {\n            return pb_1.Message.getField(this, 1) as Uint8Array;\n        }\n        set key(value: Uint8Array) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        static fromObject(data: {\n            key?: Uint8Array;\n        }) {\n            const message = new PrivKey({});\n            if (data.key != null) {\n                message.key = data.key;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                key?: Uint8Array;\n            } = {};\n            if (this.key != null) {\n                data.key = this.key;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.key !== undefined)\n                writer.writeBytes(1, this.key);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): PrivKey {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PrivKey();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.key = reader.readBytes();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): PrivKey {\n            return PrivKey.deserialize(bytes);\n        }\n    }\n}\n","/**\n * Generated by the protoc-gen-ts.  DO NOT EDIT!\n * compiler version: 3.17.3\n * source: cosmos/base/query/v1beta1/pagination.proto\n * git: https://github.com/thesayyn/protoc-gen-ts\n *  */\nimport * as pb_1 from \"google-protobuf\";\nexport namespace cosmos.base.query.v1beta1 {\n    export class PageRequest extends pb_1.Message {\n        constructor(data?: any[] | {\n            key?: Uint8Array;\n            offset?: number;\n            limit?: number;\n            count_total?: boolean;\n            reverse?: boolean;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"key\" in data && data.key != undefined) {\n                    this.key = data.key;\n                }\n                if (\"offset\" in data && data.offset != undefined) {\n                    this.offset = data.offset;\n                }\n                if (\"limit\" in data && data.limit != undefined) {\n                    this.limit = data.limit;\n                }\n                if (\"count_total\" in data && data.count_total != undefined) {\n                    this.count_total = data.count_total;\n                }\n                if (\"reverse\" in data && data.reverse != undefined) {\n                    this.reverse = data.reverse;\n                }\n            }\n        }\n        get key() {\n            return pb_1.Message.getField(this, 1) as Uint8Array;\n        }\n        set key(value: Uint8Array) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        get offset() {\n            return pb_1.Message.getField(this, 2) as number;\n        }\n        set offset(value: number) {\n            pb_1.Message.setField(this, 2, value);\n        }\n        get limit() {\n            return pb_1.Message.getField(this, 3) as number;\n        }\n        set limit(value: number) {\n            pb_1.Message.setField(this, 3, value);\n        }\n        get count_total() {\n            return pb_1.Message.getField(this, 4) as boolean;\n        }\n        set count_total(value: boolean) {\n            pb_1.Message.setField(this, 4, value);\n        }\n        get reverse() {\n            return pb_1.Message.getField(this, 5) as boolean;\n        }\n        set reverse(value: boolean) {\n            pb_1.Message.setField(this, 5, value);\n        }\n        static fromObject(data: {\n            key?: Uint8Array;\n            offset?: number;\n            limit?: number;\n            count_total?: boolean;\n            reverse?: boolean;\n        }) {\n            const message = new PageRequest({});\n            if (data.key != null) {\n                message.key = data.key;\n            }\n            if (data.offset != null) {\n                message.offset = data.offset;\n            }\n            if (data.limit != null) {\n                message.limit = data.limit;\n            }\n            if (data.count_total != null) {\n                message.count_total = data.count_total;\n            }\n            if (data.reverse != null) {\n                message.reverse = data.reverse;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                key?: Uint8Array;\n                offset?: number;\n                limit?: number;\n                count_total?: boolean;\n                reverse?: boolean;\n            } = {};\n            if (this.key != null) {\n                data.key = this.key;\n            }\n            if (this.offset != null) {\n                data.offset = this.offset;\n            }\n            if (this.limit != null) {\n                data.limit = this.limit;\n            }\n            if (this.count_total != null) {\n                data.count_total = this.count_total;\n            }\n            if (this.reverse != null) {\n                data.reverse = this.reverse;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.key !== undefined)\n                writer.writeBytes(1, this.key);\n            if (this.offset !== undefined)\n                writer.writeUint64(2, this.offset);\n            if (this.limit !== undefined)\n                writer.writeUint64(3, this.limit);\n            if (this.count_total !== undefined)\n                writer.writeBool(4, this.count_total);\n            if (this.reverse !== undefined)\n                writer.writeBool(5, this.reverse);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): PageRequest {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PageRequest();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.key = reader.readBytes();\n                        break;\n                    case 2:\n                        message.offset = reader.readUint64();\n                        break;\n                    case 3:\n                        message.limit = reader.readUint64();\n                        break;\n                    case 4:\n                        message.count_total = reader.readBool();\n                        break;\n                    case 5:\n                        message.reverse = reader.readBool();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): PageRequest {\n            return PageRequest.deserialize(bytes);\n        }\n    }\n    export class PageResponse extends pb_1.Message {\n        constructor(data?: any[] | {\n            next_key?: Uint8Array;\n            total?: number;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"next_key\" in data && data.next_key != undefined) {\n                    this.next_key = data.next_key;\n                }\n                if (\"total\" in data && data.total != undefined) {\n                    this.total = data.total;\n                }\n            }\n        }\n        get next_key() {\n            return pb_1.Message.getField(this, 1) as Uint8Array;\n        }\n        set next_key(value: Uint8Array) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        get total() {\n            return pb_1.Message.getField(this, 2) as number;\n        }\n        set total(value: number) {\n            pb_1.Message.setField(this, 2, value);\n        }\n        static fromObject(data: {\n            next_key?: Uint8Array;\n            total?: number;\n        }) {\n            const message = new PageResponse({});\n            if (data.next_key != null) {\n                message.next_key = data.next_key;\n            }\n            if (data.total != null) {\n                message.total = data.total;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                next_key?: Uint8Array;\n                total?: number;\n            } = {};\n            if (this.next_key != null) {\n                data.next_key = this.next_key;\n            }\n            if (this.total != null) {\n                data.total = this.total;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.next_key !== undefined)\n                writer.writeBytes(1, this.next_key);\n            if (this.total !== undefined)\n                writer.writeUint64(2, this.total);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): PageResponse {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PageResponse();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.next_key = reader.readBytes();\n                        break;\n                    case 2:\n                        message.total = reader.readUint64();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): PageResponse {\n            return PageResponse.deserialize(bytes);\n        }\n    }\n}\n","/**\n * Generated by the protoc-gen-ts.  DO NOT EDIT!\n * compiler version: 3.17.3\n * source: cosmos/auth/v1beta1/auth.proto\n * git: https://github.com/thesayyn/protoc-gen-ts\n *  */\nimport * as dependency_1 from \"./../../../cosmos_proto/cosmos\";\nimport * as dependency_2 from \"./../../../gogoproto/gogo\";\nimport * as dependency_3 from \"./../../../google/protobuf/any\";\nimport * as pb_1 from \"google-protobuf\";\nexport namespace cosmos.auth.v1beta1 {\n    export class BaseAccount extends pb_1.Message {\n        constructor(data?: any[] | {\n            address?: string;\n            pub_key?: dependency_3.google.protobuf.Any;\n            account_number?: number;\n            sequence?: number;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"address\" in data && data.address != undefined) {\n                    this.address = data.address;\n                }\n                if (\"pub_key\" in data && data.pub_key != undefined) {\n                    this.pub_key = data.pub_key;\n                }\n                if (\"account_number\" in data && data.account_number != undefined) {\n                    this.account_number = data.account_number;\n                }\n                if (\"sequence\" in data && data.sequence != undefined) {\n                    this.sequence = data.sequence;\n                }\n            }\n        }\n        get address() {\n            return pb_1.Message.getField(this, 1) as string;\n        }\n        set address(value: string) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        get pub_key() {\n            return pb_1.Message.getWrapperField(this, dependency_3.google.protobuf.Any, 2) as dependency_3.google.protobuf.Any;\n        }\n        set pub_key(value: dependency_3.google.protobuf.Any) {\n            pb_1.Message.setWrapperField(this, 2, value);\n        }\n        get account_number() {\n            return pb_1.Message.getField(this, 3) as number;\n        }\n        set account_number(value: number) {\n            pb_1.Message.setField(this, 3, value);\n        }\n        get sequence() {\n            return pb_1.Message.getField(this, 4) as number;\n        }\n        set sequence(value: number) {\n            pb_1.Message.setField(this, 4, value);\n        }\n        static fromObject(data: {\n            address?: string;\n            pub_key?: ReturnType<typeof dependency_3.google.protobuf.Any.prototype.toObject>;\n            account_number?: number;\n            sequence?: number;\n        }) {\n            const message = new BaseAccount({});\n            if (data.address != null) {\n                message.address = data.address;\n            }\n            if (data.pub_key != null) {\n                message.pub_key = dependency_3.google.protobuf.Any.fromObject(data.pub_key);\n            }\n            if (data.account_number != null) {\n                message.account_number = data.account_number;\n            }\n            if (data.sequence != null) {\n                message.sequence = data.sequence;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                address?: string;\n                pub_key?: ReturnType<typeof dependency_3.google.protobuf.Any.prototype.toObject>;\n                account_number?: number;\n                sequence?: number;\n            } = {};\n            if (this.address != null) {\n                data.address = this.address;\n            }\n            if (this.pub_key != null) {\n                data.pub_key = this.pub_key.toObject();\n            }\n            if (this.account_number != null) {\n                data.account_number = this.account_number;\n            }\n            if (this.sequence != null) {\n                data.sequence = this.sequence;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (typeof this.address === \"string\" && this.address.length)\n                writer.writeString(1, this.address);\n            if (this.pub_key !== undefined)\n                writer.writeMessage(2, this.pub_key, () => this.pub_key.serialize(writer));\n            if (this.account_number !== undefined)\n                writer.writeUint64(3, this.account_number);\n            if (this.sequence !== undefined)\n                writer.writeUint64(4, this.sequence);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): BaseAccount {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new BaseAccount();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.address = reader.readString();\n                        break;\n                    case 2:\n                        reader.readMessage(message.pub_key, () => message.pub_key = dependency_3.google.protobuf.Any.deserialize(reader));\n                        break;\n                    case 3:\n                        message.account_number = reader.readUint64();\n                        break;\n                    case 4:\n                        message.sequence = reader.readUint64();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): BaseAccount {\n            return BaseAccount.deserialize(bytes);\n        }\n    }\n    export class ModuleAccount extends pb_1.Message {\n        constructor(data?: any[] | {\n            base_account?: BaseAccount;\n            name?: string;\n            permissions?: string[];\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"base_account\" in data && data.base_account != undefined) {\n                    this.base_account = data.base_account;\n                }\n                if (\"name\" in data && data.name != undefined) {\n                    this.name = data.name;\n                }\n                if (\"permissions\" in data && data.permissions != undefined) {\n                    this.permissions = data.permissions;\n                }\n            }\n        }\n        get base_account() {\n            return pb_1.Message.getWrapperField(this, BaseAccount, 1) as BaseAccount;\n        }\n        set base_account(value: BaseAccount) {\n            pb_1.Message.setWrapperField(this, 1, value);\n        }\n        get name() {\n            return pb_1.Message.getField(this, 2) as string;\n        }\n        set name(value: string) {\n            pb_1.Message.setField(this, 2, value);\n        }\n        get permissions() {\n            return pb_1.Message.getField(this, 3) as string[];\n        }\n        set permissions(value: string[]) {\n            pb_1.Message.setField(this, 3, value);\n        }\n        static fromObject(data: {\n            base_account?: ReturnType<typeof BaseAccount.prototype.toObject>;\n            name?: string;\n            permissions?: string[];\n        }) {\n            const message = new ModuleAccount({});\n            if (data.base_account != null) {\n                message.base_account = BaseAccount.fromObject(data.base_account);\n            }\n            if (data.name != null) {\n                message.name = data.name;\n            }\n            if (data.permissions != null) {\n                message.permissions = data.permissions;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                base_account?: ReturnType<typeof BaseAccount.prototype.toObject>;\n                name?: string;\n                permissions?: string[];\n            } = {};\n            if (this.base_account != null) {\n                data.base_account = this.base_account.toObject();\n            }\n            if (this.name != null) {\n                data.name = this.name;\n            }\n            if (this.permissions != null) {\n                data.permissions = this.permissions;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.base_account !== undefined)\n                writer.writeMessage(1, this.base_account, () => this.base_account.serialize(writer));\n            if (typeof this.name === \"string\" && this.name.length)\n                writer.writeString(2, this.name);\n            if (this.permissions !== undefined)\n                writer.writeRepeatedString(3, this.permissions);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ModuleAccount {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ModuleAccount();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.base_account, () => message.base_account = BaseAccount.deserialize(reader));\n                        break;\n                    case 2:\n                        message.name = reader.readString();\n                        break;\n                    case 3:\n                        pb_1.Message.addToRepeatedField(message, 3, reader.readString());\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): ModuleAccount {\n            return ModuleAccount.deserialize(bytes);\n        }\n    }\n    export class Params extends pb_1.Message {\n        constructor(data?: any[] | {\n            max_memo_characters?: number;\n            tx_sig_limit?: number;\n            tx_size_cost_per_byte?: number;\n            sig_verify_cost_ed25519?: number;\n            sig_verify_cost_secp256k1?: number;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"max_memo_characters\" in data && data.max_memo_characters != undefined) {\n                    this.max_memo_characters = data.max_memo_characters;\n                }\n                if (\"tx_sig_limit\" in data && data.tx_sig_limit != undefined) {\n                    this.tx_sig_limit = data.tx_sig_limit;\n                }\n                if (\"tx_size_cost_per_byte\" in data && data.tx_size_cost_per_byte != undefined) {\n                    this.tx_size_cost_per_byte = data.tx_size_cost_per_byte;\n                }\n                if (\"sig_verify_cost_ed25519\" in data && data.sig_verify_cost_ed25519 != undefined) {\n                    this.sig_verify_cost_ed25519 = data.sig_verify_cost_ed25519;\n                }\n                if (\"sig_verify_cost_secp256k1\" in data && data.sig_verify_cost_secp256k1 != undefined) {\n                    this.sig_verify_cost_secp256k1 = data.sig_verify_cost_secp256k1;\n                }\n            }\n        }\n        get max_memo_characters() {\n            return pb_1.Message.getField(this, 1) as number;\n        }\n        set max_memo_characters(value: number) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        get tx_sig_limit() {\n            return pb_1.Message.getField(this, 2) as number;\n        }\n        set tx_sig_limit(value: number) {\n            pb_1.Message.setField(this, 2, value);\n        }\n        get tx_size_cost_per_byte() {\n            return pb_1.Message.getField(this, 3) as number;\n        }\n        set tx_size_cost_per_byte(value: number) {\n            pb_1.Message.setField(this, 3, value);\n        }\n        get sig_verify_cost_ed25519() {\n            return pb_1.Message.getField(this, 4) as number;\n        }\n        set sig_verify_cost_ed25519(value: number) {\n            pb_1.Message.setField(this, 4, value);\n        }\n        get sig_verify_cost_secp256k1() {\n            return pb_1.Message.getField(this, 5) as number;\n        }\n        set sig_verify_cost_secp256k1(value: number) {\n            pb_1.Message.setField(this, 5, value);\n        }\n        static fromObject(data: {\n            max_memo_characters?: number;\n            tx_sig_limit?: number;\n            tx_size_cost_per_byte?: number;\n            sig_verify_cost_ed25519?: number;\n            sig_verify_cost_secp256k1?: number;\n        }) {\n            const message = new Params({});\n            if (data.max_memo_characters != null) {\n                message.max_memo_characters = data.max_memo_characters;\n            }\n            if (data.tx_sig_limit != null) {\n                message.tx_sig_limit = data.tx_sig_limit;\n            }\n            if (data.tx_size_cost_per_byte != null) {\n                message.tx_size_cost_per_byte = data.tx_size_cost_per_byte;\n            }\n            if (data.sig_verify_cost_ed25519 != null) {\n                message.sig_verify_cost_ed25519 = data.sig_verify_cost_ed25519;\n            }\n            if (data.sig_verify_cost_secp256k1 != null) {\n                message.sig_verify_cost_secp256k1 = data.sig_verify_cost_secp256k1;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                max_memo_characters?: number;\n                tx_sig_limit?: number;\n                tx_size_cost_per_byte?: number;\n                sig_verify_cost_ed25519?: number;\n                sig_verify_cost_secp256k1?: number;\n            } = {};\n            if (this.max_memo_characters != null) {\n                data.max_memo_characters = this.max_memo_characters;\n            }\n            if (this.tx_sig_limit != null) {\n                data.tx_sig_limit = this.tx_sig_limit;\n            }\n            if (this.tx_size_cost_per_byte != null) {\n                data.tx_size_cost_per_byte = this.tx_size_cost_per_byte;\n            }\n            if (this.sig_verify_cost_ed25519 != null) {\n                data.sig_verify_cost_ed25519 = this.sig_verify_cost_ed25519;\n            }\n            if (this.sig_verify_cost_secp256k1 != null) {\n                data.sig_verify_cost_secp256k1 = this.sig_verify_cost_secp256k1;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.max_memo_characters !== undefined)\n                writer.writeUint64(1, this.max_memo_characters);\n            if (this.tx_sig_limit !== undefined)\n                writer.writeUint64(2, this.tx_sig_limit);\n            if (this.tx_size_cost_per_byte !== undefined)\n                writer.writeUint64(3, this.tx_size_cost_per_byte);\n            if (this.sig_verify_cost_ed25519 !== undefined)\n                writer.writeUint64(4, this.sig_verify_cost_ed25519);\n            if (this.sig_verify_cost_secp256k1 !== undefined)\n                writer.writeUint64(5, this.sig_verify_cost_secp256k1);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Params {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Params();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.max_memo_characters = reader.readUint64();\n                        break;\n                    case 2:\n                        message.tx_sig_limit = reader.readUint64();\n                        break;\n                    case 3:\n                        message.tx_size_cost_per_byte = reader.readUint64();\n                        break;\n                    case 4:\n                        message.sig_verify_cost_ed25519 = reader.readUint64();\n                        break;\n                    case 5:\n                        message.sig_verify_cost_secp256k1 = reader.readUint64();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): Params {\n            return Params.deserialize(bytes);\n        }\n    }\n}\n","/**\n * Generated by the protoc-gen-ts.  DO NOT EDIT!\n * compiler version: 3.17.3\n * source: cosmos/auth/v1beta1/query.proto\n * git: https://github.com/thesayyn/protoc-gen-ts\n *  */\nimport * as dependency_1 from \"./../../base/query/v1beta1/pagination\";\nimport * as dependency_2 from \"./../../../gogoproto/gogo\";\nimport * as dependency_3 from \"./../../../google/protobuf/any\";\nimport * as dependency_4 from \"./../../../google/api/annotations\";\nimport * as dependency_5 from \"./auth\";\nimport * as dependency_6 from \"./../../../cosmos_proto/cosmos\";\nimport * as pb_1 from \"google-protobuf\";\nimport * as grpc_1 from \"@grpc/grpc-js\";\nexport namespace cosmos.auth.v1beta1 {\n    export class QueryAccountsRequest extends pb_1.Message {\n        constructor(data?: any[] | {\n            pagination?: dependency_1.cosmos.base.query.v1beta1.PageRequest;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"pagination\" in data && data.pagination != undefined) {\n                    this.pagination = data.pagination;\n                }\n            }\n        }\n        get pagination() {\n            return pb_1.Message.getWrapperField(this, dependency_1.cosmos.base.query.v1beta1.PageRequest, 1) as dependency_1.cosmos.base.query.v1beta1.PageRequest;\n        }\n        set pagination(value: dependency_1.cosmos.base.query.v1beta1.PageRequest) {\n            pb_1.Message.setWrapperField(this, 1, value);\n        }\n        static fromObject(data: {\n            pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;\n        }) {\n            const message = new QueryAccountsRequest({});\n            if (data.pagination != null) {\n                message.pagination = dependency_1.cosmos.base.query.v1beta1.PageRequest.fromObject(data.pagination);\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageRequest.prototype.toObject>;\n            } = {};\n            if (this.pagination != null) {\n                data.pagination = this.pagination.toObject();\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.pagination !== undefined)\n                writer.writeMessage(1, this.pagination, () => this.pagination.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryAccountsRequest {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryAccountsRequest();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.pagination, () => message.pagination = dependency_1.cosmos.base.query.v1beta1.PageRequest.deserialize(reader));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): QueryAccountsRequest {\n            return QueryAccountsRequest.deserialize(bytes);\n        }\n    }\n    export class QueryAccountsResponse extends pb_1.Message {\n        constructor(data?: any[] | {\n            accounts?: dependency_3.google.protobuf.Any[];\n            pagination?: dependency_1.cosmos.base.query.v1beta1.PageResponse;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"accounts\" in data && data.accounts != undefined) {\n                    this.accounts = data.accounts;\n                }\n                if (\"pagination\" in data && data.pagination != undefined) {\n                    this.pagination = data.pagination;\n                }\n            }\n        }\n        get accounts() {\n            return pb_1.Message.getRepeatedWrapperField(this, dependency_3.google.protobuf.Any, 1) as dependency_3.google.protobuf.Any[];\n        }\n        set accounts(value: dependency_3.google.protobuf.Any[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        get pagination() {\n            return pb_1.Message.getWrapperField(this, dependency_1.cosmos.base.query.v1beta1.PageResponse, 2) as dependency_1.cosmos.base.query.v1beta1.PageResponse;\n        }\n        set pagination(value: dependency_1.cosmos.base.query.v1beta1.PageResponse) {\n            pb_1.Message.setWrapperField(this, 2, value);\n        }\n        static fromObject(data: {\n            accounts?: ReturnType<typeof dependency_3.google.protobuf.Any.prototype.toObject>[];\n            pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;\n        }) {\n            const message = new QueryAccountsResponse({});\n            if (data.accounts != null) {\n                message.accounts = data.accounts.map(item => dependency_3.google.protobuf.Any.fromObject(item));\n            }\n            if (data.pagination != null) {\n                message.pagination = dependency_1.cosmos.base.query.v1beta1.PageResponse.fromObject(data.pagination);\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                accounts?: ReturnType<typeof dependency_3.google.protobuf.Any.prototype.toObject>[];\n                pagination?: ReturnType<typeof dependency_1.cosmos.base.query.v1beta1.PageResponse.prototype.toObject>;\n            } = {};\n            if (this.accounts != null) {\n                data.accounts = this.accounts.map((item: dependency_3.google.protobuf.Any) => item.toObject());\n            }\n            if (this.pagination != null) {\n                data.pagination = this.pagination.toObject();\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.accounts !== undefined)\n                writer.writeRepeatedMessage(1, this.accounts, (item: dependency_3.google.protobuf.Any) => item.serialize(writer));\n            if (this.pagination !== undefined)\n                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryAccountsResponse {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryAccountsResponse();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.accounts, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_3.google.protobuf.Any.deserialize(reader), dependency_3.google.protobuf.Any));\n                        break;\n                    case 2:\n                        reader.readMessage(message.pagination, () => message.pagination = dependency_1.cosmos.base.query.v1beta1.PageResponse.deserialize(reader));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): QueryAccountsResponse {\n            return QueryAccountsResponse.deserialize(bytes);\n        }\n    }\n    export class QueryAccountRequest extends pb_1.Message {\n        constructor(data?: any[] | {\n            address?: string;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"address\" in data && data.address != undefined) {\n                    this.address = data.address;\n                }\n            }\n        }\n        get address() {\n            return pb_1.Message.getField(this, 1) as string;\n        }\n        set address(value: string) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        static fromObject(data: {\n            address?: string;\n        }) {\n            const message = new QueryAccountRequest({});\n            if (data.address != null) {\n                message.address = data.address;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                address?: string;\n            } = {};\n            if (this.address != null) {\n                data.address = this.address;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (typeof this.address === \"string\" && this.address.length)\n                writer.writeString(1, this.address);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryAccountRequest {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryAccountRequest();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.address = reader.readString();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): QueryAccountRequest {\n            return QueryAccountRequest.deserialize(bytes);\n        }\n    }\n    export class QueryAccountResponse extends pb_1.Message {\n        constructor(data?: any[] | {\n            account?: dependency_3.google.protobuf.Any;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"account\" in data && data.account != undefined) {\n                    this.account = data.account;\n                }\n            }\n        }\n        get account() {\n            return pb_1.Message.getWrapperField(this, dependency_3.google.protobuf.Any, 1) as dependency_3.google.protobuf.Any;\n        }\n        set account(value: dependency_3.google.protobuf.Any) {\n            pb_1.Message.setWrapperField(this, 1, value);\n        }\n        static fromObject(data: {\n            account?: ReturnType<typeof dependency_3.google.protobuf.Any.prototype.toObject>;\n        }) {\n            const message = new QueryAccountResponse({});\n            if (data.account != null) {\n                message.account = dependency_3.google.protobuf.Any.fromObject(data.account);\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                account?: ReturnType<typeof dependency_3.google.protobuf.Any.prototype.toObject>;\n            } = {};\n            if (this.account != null) {\n                data.account = this.account.toObject();\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.account !== undefined)\n                writer.writeMessage(1, this.account, () => this.account.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryAccountResponse {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryAccountResponse();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.account, () => message.account = dependency_3.google.protobuf.Any.deserialize(reader));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): QueryAccountResponse {\n            return QueryAccountResponse.deserialize(bytes);\n        }\n    }\n    export class QueryParamsRequest extends pb_1.Message {\n        constructor(data?: any[] | {}) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);\n            if (!Array.isArray(data) && typeof data == \"object\") { }\n        }\n        static fromObject(data: {}) {\n            const message = new QueryParamsRequest({});\n            return message;\n        }\n        toObject() {\n            const data: {} = {};\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryParamsRequest {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryParamsRequest();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): QueryParamsRequest {\n            return QueryParamsRequest.deserialize(bytes);\n        }\n    }\n    export class QueryParamsResponse extends pb_1.Message {\n        constructor(data?: any[] | {\n            params?: dependency_5.cosmos.auth.v1beta1.Params;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"params\" in data && data.params != undefined) {\n                    this.params = data.params;\n                }\n            }\n        }\n        get params() {\n            return pb_1.Message.getWrapperField(this, dependency_5.cosmos.auth.v1beta1.Params, 1) as dependency_5.cosmos.auth.v1beta1.Params;\n        }\n        set params(value: dependency_5.cosmos.auth.v1beta1.Params) {\n            pb_1.Message.setWrapperField(this, 1, value);\n        }\n        static fromObject(data: {\n            params?: ReturnType<typeof dependency_5.cosmos.auth.v1beta1.Params.prototype.toObject>;\n        }) {\n            const message = new QueryParamsResponse({});\n            if (data.params != null) {\n                message.params = dependency_5.cosmos.auth.v1beta1.Params.fromObject(data.params);\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                params?: ReturnType<typeof dependency_5.cosmos.auth.v1beta1.Params.prototype.toObject>;\n            } = {};\n            if (this.params != null) {\n                data.params = this.params.toObject();\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.params !== undefined)\n                writer.writeMessage(1, this.params, () => this.params.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryParamsResponse {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryParamsResponse();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.params, () => message.params = dependency_5.cosmos.auth.v1beta1.Params.deserialize(reader));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): QueryParamsResponse {\n            return QueryParamsResponse.deserialize(bytes);\n        }\n    }\n    interface GrpcUnaryServiceInterface<P, R> {\n        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;\n        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;\n        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;\n        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;\n    }\n    interface GrpcStreamServiceInterface<P, R> {\n        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;\n        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;\n    }\n    interface GrpWritableServiceInterface<P, R> {\n        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;\n        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;\n        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;\n        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;\n    }\n    interface GrpcChunkServiceInterface<P, R> {\n        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;\n        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;\n    }\n    interface GrpcPromiseServiceInterface<P, R> {\n        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;\n        (message: P, options?: grpc_1.CallOptions): Promise<R>;\n    }\n    export abstract class UnimplementedQueryService {\n        static definition = {\n            Accounts: {\n                path: \"/cosmos.auth.v1beta1.Query/Accounts\",\n                requestStream: false,\n                responseStream: false,\n                requestSerialize: (message: QueryAccountsRequest) => Buffer.from(message.serialize()),\n                requestDeserialize: (bytes: Buffer) => QueryAccountsRequest.deserialize(new Uint8Array(bytes)),\n                responseSerialize: (message: QueryAccountsResponse) => Buffer.from(message.serialize()),\n                responseDeserialize: (bytes: Buffer) => QueryAccountsResponse.deserialize(new Uint8Array(bytes))\n            },\n            Account: {\n                path: \"/cosmos.auth.v1beta1.Query/Account\",\n                requestStream: false,\n                responseStream: false,\n                requestSerialize: (message: QueryAccountRequest) => Buffer.from(message.serialize()),\n                requestDeserialize: (bytes: Buffer) => QueryAccountRequest.deserialize(new Uint8Array(bytes)),\n                responseSerialize: (message: QueryAccountResponse) => Buffer.from(message.serialize()),\n                responseDeserialize: (bytes: Buffer) => QueryAccountResponse.deserialize(new Uint8Array(bytes))\n            },\n            Params: {\n                path: \"/cosmos.auth.v1beta1.Query/Params\",\n                requestStream: false,\n                responseStream: false,\n                requestSerialize: (message: QueryParamsRequest) => Buffer.from(message.serialize()),\n                requestDeserialize: (bytes: Buffer) => QueryParamsRequest.deserialize(new Uint8Array(bytes)),\n                responseSerialize: (message: QueryParamsResponse) => Buffer.from(message.serialize()),\n                responseDeserialize: (bytes: Buffer) => QueryParamsResponse.deserialize(new Uint8Array(bytes))\n            }\n        };\n        [method: string]: grpc_1.UntypedHandleCall;\n        abstract Accounts(call: grpc_1.ServerUnaryCall<QueryAccountsRequest, QueryAccountsResponse>, callback: grpc_1.sendUnaryData<QueryAccountsResponse>): void;\n        abstract Account(call: grpc_1.ServerUnaryCall<QueryAccountRequest, QueryAccountResponse>, callback: grpc_1.sendUnaryData<QueryAccountResponse>): void;\n        abstract Params(call: grpc_1.ServerUnaryCall<QueryParamsRequest, QueryParamsResponse>, callback: grpc_1.sendUnaryData<QueryParamsResponse>): void;\n    }\n    export class QueryClient extends grpc_1.makeGenericClientConstructor(UnimplementedQueryService.definition, \"Query\", {}) {\n        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {\n            super(address, credentials, options)\n        }\n        Accounts: GrpcUnaryServiceInterface<QueryAccountsRequest, QueryAccountsResponse> = (message: QueryAccountsRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryAccountsResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryAccountsResponse>, callback?: grpc_1.requestCallback<QueryAccountsResponse>): grpc_1.ClientUnaryCall => {\n            return super.Accounts(message, metadata, options, callback);\n        };\n        Account: GrpcUnaryServiceInterface<QueryAccountRequest, QueryAccountResponse> = (message: QueryAccountRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryAccountResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryAccountResponse>, callback?: grpc_1.requestCallback<QueryAccountResponse>): grpc_1.ClientUnaryCall => {\n            return super.Account(message, metadata, options, callback);\n        };\n        Params: GrpcUnaryServiceInterface<QueryParamsRequest, QueryParamsResponse> = (message: QueryParamsRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<QueryParamsResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<QueryParamsResponse>, callback?: grpc_1.requestCallback<QueryParamsResponse>): grpc_1.ClientUnaryCall => {\n            return super.Params(message, metadata, options, callback);\n        };\n    }\n}\n","/**\n * Generated by the protoc-gen-ts.  DO NOT EDIT!\n * compiler version: 3.17.3\n * source: ethermint/types/v1/account.proto\n * git: https://github.com/thesayyn/protoc-gen-ts\n *  */\nimport * as dependency_1 from \"./../../../cosmos/auth/v1beta1/auth\";\nimport * as dependency_2 from \"./../../../cosmos_proto/cosmos\";\nimport * as dependency_3 from \"./../../../gogoproto/gogo\";\nimport * as pb_1 from \"google-protobuf\";\nexport namespace ethermint.types.v1 {\n    export class EthAccount extends pb_1.Message {\n        constructor(data?: any[] | {\n            base_account?: dependency_1.cosmos.auth.v1beta1.BaseAccount;\n            code_hash?: string;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], []);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"base_account\" in data && data.base_account != undefined) {\n                    this.base_account = data.base_account;\n                }\n                if (\"code_hash\" in data && data.code_hash != undefined) {\n                    this.code_hash = data.code_hash;\n                }\n            }\n        }\n        get base_account() {\n            return pb_1.Message.getWrapperField(this, dependency_1.cosmos.auth.v1beta1.BaseAccount, 1) as dependency_1.cosmos.auth.v1beta1.BaseAccount;\n        }\n        set base_account(value: dependency_1.cosmos.auth.v1beta1.BaseAccount) {\n            pb_1.Message.setWrapperField(this, 1, value);\n        }\n        get code_hash() {\n            return pb_1.Message.getField(this, 2) as string;\n        }\n        set code_hash(value: string) {\n            pb_1.Message.setField(this, 2, value);\n        }\n        static fromObject(data: {\n            base_account?: ReturnType<typeof dependency_1.cosmos.auth.v1beta1.BaseAccount.prototype.toObject>;\n            code_hash?: string;\n        }) {\n            const message = new EthAccount({});\n            if (data.base_account != null) {\n                message.base_account = dependency_1.cosmos.auth.v1beta1.BaseAccount.fromObject(data.base_account);\n            }\n            if (data.code_hash != null) {\n                message.code_hash = data.code_hash;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                base_account?: ReturnType<typeof dependency_1.cosmos.auth.v1beta1.BaseAccount.prototype.toObject>;\n                code_hash?: string;\n            } = {};\n            if (this.base_account != null) {\n                data.base_account = this.base_account.toObject();\n            }\n            if (this.code_hash != null) {\n                data.code_hash = this.code_hash;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.base_account !== undefined)\n                writer.writeMessage(1, this.base_account, () => this.base_account.serialize(writer));\n            if (typeof this.code_hash === \"string\" && this.code_hash.length)\n                writer.writeString(2, this.code_hash);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): EthAccount {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new EthAccount();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.base_account, () => message.base_account = dependency_1.cosmos.auth.v1beta1.BaseAccount.deserialize(reader));\n                        break;\n                    case 2:\n                        message.code_hash = reader.readString();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): EthAccount {\n            return EthAccount.deserialize(bytes);\n        }\n    }\n}\n","import * as google from '../proto/google/protobuf/any'\nimport { Message } from 'google-protobuf'\n\nexport interface MessageGenerated {\n    message: Message\n    path: string\n}\n\nexport function createAnyMessage(msg: MessageGenerated) {\n    return new google.google.protobuf.Any({\n        type_url: '/' + msg.path,\n        value: msg.message.serializeBinary(),\n    })\n}\n","import { createMsgSend } from \"./messages/msgSend\"\nimport { createAuthInfo, createBody, createFee, createSigDoc, createSignerInfo } from \"./transaction/transaction\"\nimport { Keccak } from 'sha3';\n\nexport class MessagesHelper {\n    constructor() { }\n\n    CreateTransaction(\n        message: any,\n        memo: string,\n        fee: string,\n        denom: string,\n        gasLimit: number,\n        algo: string,\n        pubKey: string,\n        sequence: number,\n        accountNumber: number,\n        chainId: string,\n\n    ) {\n        let body = createBody(message, memo)\n        let feeMessage = createFee(fee, denom, gasLimit)\n        let pubKeyDecoded = Buffer.from(pubKey, 'base64')\n\n        let signInfo = createSignerInfo(\n            algo,\n            new Uint8Array(pubKeyDecoded),\n            sequence,\n        )\n\n        let authInfo = createAuthInfo(signInfo, feeMessage)\n\n        let signDoc = createSigDoc(body.serializeBinary(), authInfo.serializeBinary(), chainId, accountNumber)\n        const hash = new Keccak(256);\n        hash.update(Buffer.from(signDoc.serializeBinary()))\n        const toSign = hash.digest('binary')\n\n        const res = {\n            'bodyBytes': Buffer.from(body.serializeBinary()).toString('base64'),\n            'authInfoBytes': Buffer.from(authInfo.serializeBinary()).toString('base64'),\n            'chainId': chainId,\n            'accountNumber': accountNumber,\n            'signBytes': toSign.toString('base64')\n        }\n        return res\n    }\n\n    CreateMsgSend(\n        fromAddress: string,\n        toAddress: string,\n        amount: string,\n        denom: string\n    ) {\n        return createMsgSend(\n            fromAddress,\n            toAddress,\n            amount,\n            denom)\n\n    }\n\n}","import * as tx from '../proto/cosmos/tx/v1beta1/tx'\nimport * as signing from '../proto/cosmos/tx/signing/v1beta1/signing'\nimport * as coin from '../proto/cosmos/base/v1beta1/coin'\nimport * as eth from '../proto/ethermint/crypto/v1/ethsecp256k1/keys'\nimport * as secp from '../proto/cosmos/crypto/secp256k1/keys'\n\nimport { createAnyMessage, MessageGenerated } from '../messages/utils'\n\nexport function createBody(message: any, memo: string) {\n    let msg = new tx.cosmos.tx.v1beta1.TxBody({\n        messages: [createAnyMessage(message)],\n        memo: memo,\n    })\n    return msg\n}\n\nexport function createFee(fee: string, denom: string, gasLimit: number) {\n    return new tx.cosmos.tx.v1beta1.Fee({\n        amount: [\n            new coin.cosmos.base.v1beta1.Coin({\n                denom: denom,\n                amount: fee,\n            }),\n        ],\n        gas_limit: gasLimit,\n    })\n}\n\nexport function createSignerInfo(\n    algo: string,\n    publicKey: Uint8Array,\n    sequence: number\n) {\n    let pubkey: MessageGenerated\n\n    // NOTE: secp256k1 is going to be removed from evmos\n    if (algo == 'secp256k1') {\n        pubkey = {\n            message: new secp.cosmos.crypto.secp256k1.PubKey({\n                key: publicKey,\n            }),\n            path: 'cosmos.crypto.secp256k1.PubKey',\n        }\n    } else {\n        // NOTE: assume ethsecp256k1 by default because after mainnet is the only one that is going to be supported\n        pubkey = {\n            message: new eth.ethermint.crypto.v1.ethsecp256k1.PubKey({\n                key: publicKey,\n            }),\n            path: 'ethermint.crypto.v1.ethsecp256k1.PubKey',\n        }\n    }\n\n    let signerInfo = new tx.cosmos.tx.v1beta1.SignerInfo({\n        public_key: createAnyMessage(pubkey),\n        mode_info: new tx.cosmos.tx.v1beta1.ModeInfo({\n            single: new tx.cosmos.tx.v1beta1.ModeInfo.Single({\n                mode: signing.cosmos.tx.signing.v1beta1.SignMode\n                    .SIGN_MODE_DIRECT,\n            }),\n        }),\n        sequence: sequence,\n    })\n\n    return signerInfo\n}\n\nexport function createAuthInfo(\n    signerInfo: tx.cosmos.tx.v1beta1.SignerInfo,\n    fee: tx.cosmos.tx.v1beta1.Fee\n) {\n    return new tx.cosmos.tx.v1beta1.AuthInfo({\n        signer_infos: [signerInfo],\n        fee: fee,\n    })\n}\n\nexport function createSigDoc(\n    bodyBytes: Uint8Array,\n    authInfoBytes: Uint8Array,\n    chainId: string,\n    accountNumber: number\n) {\n    return new tx.cosmos.tx.v1beta1.SignDoc({\n        body_bytes: bodyBytes,\n        auth_info_bytes: authInfoBytes,\n        chain_id: chainId,\n        account_number: accountNumber,\n    })\n}\n","import * as bank from '../proto/cosmos/bank/v1beta1/tx'\nimport * as coin from '../proto/cosmos/base/v1beta1/coin'\n\nexport function createMsgSend(\n    fromAddress: string,\n    toAddress: string,\n    amount: string,\n    denom: string\n) {\n    let value = new coin.cosmos.base.v1beta1.Coin({\n        denom: denom,\n        amount: amount,\n    })\n\n    let message = new bank.cosmos.bank.v1beta1.MsgSend({\n        from_address: fromAddress,\n        to_address: toAddress,\n        amount: [value],\n    })\n    return {\n        message: message,\n        path: 'cosmos.bank.v1beta1.MsgSend',\n    }\n}\n","var grpc = require('@grpc/grpc-js')\n\nimport * as query from '../proto/cosmos/auth/v1beta1/query'\nimport * as eth from '../proto/ethermint/types/v1/account'\n\nconst meta = new grpc.Metadata()\nexport interface Account {\n    address: string\n    pubkey: Uint8Array\n    pubkeyType: string\n    accountNumber: number\n    sequence: number\n    error: string\n}\n\nexport class authClient {\n    client: any\n    pathToService: string\n    constructor(pathToService: string) {\n        this.pathToService = pathToService\n        this.client = new query.cosmos.auth.v1beta1.QueryClient(\n            pathToService,\n            grpc.credentials.createInsecure()\n        )\n    }\n\n    async createRequestMessage(request: any, type: any) {\n        let message\n\n        switch (type) {\n            case 'account':\n                message = new query.cosmos.auth.v1beta1.QueryAccountRequest({\n                    address: request,\n                })\n        }\n        return message\n    }\n\n    async account(address: any): Promise<Account> {\n        meta.set('Account', address)\n        const message = await this.createRequestMessage(address, 'account')\n        const promise =\n            new Promise<query.cosmos.auth.v1beta1.QueryAccountResponse>(\n                (resolve, reject) => {\n                    this.client.Account(\n                        message,\n                        meta,\n                        (\n                            err: any,\n                            res: query.cosmos.auth.v1beta1.QueryAccountResponse\n                        ) => {\n                            if (err) {\n                                reject(err)\n                            } else {\n                                resolve(res)\n                            }\n                        }\n                    )\n                }\n            )\n\n        return promise\n            .then((value: query.cosmos.auth.v1beta1.QueryAccountResponse) => {\n                // console.dir(value.serializeBinary(), { 'maxArrayLength': null })\n                const ethAccount = value.toObject()\n                if (ethAccount.account && ethAccount.account.value) {\n                    let account = eth.ethermint.types.v1.EthAccount.deserialize(\n                        ethAccount.account.value\n                    ).toObject()\n                    if (account.base_account) {\n                        return {\n                            address: account.base_account.address\n                                ? account.base_account.address\n                                : '',\n                            pubkey: account.base_account.pub_key\n                                ? account.base_account.pub_key.value\n                                    ? account.base_account.pub_key.value\n                                    : new Uint8Array()\n                                : new Uint8Array(),\n                            pubkeyType: account.base_account.pub_key\n                                ? account.base_account.pub_key.type_url\n                                    ? account.base_account.pub_key.type_url\n                                    : ''\n                                : '',\n                            accountNumber: account.base_account.account_number\n                                ? account.base_account.account_number\n                                : 0,\n                            sequence: account.base_account.sequence\n                                ? account.base_account.sequence\n                                : 0,\n                            error: '',\n                        }\n                    }\n                }\n                throw 'Account response has no base/eth account.'\n            })\n            .catch((e: any) => {\n                return {\n                    address: '',\n                    pubkey: new Uint8Array(),\n                    pubkeyType: '',\n                    accountNumber: -1,\n                    sequence: -1,\n                    error: e.message,\n                }\n            })\n    }\n}\n","import { MessagesHelper } from './messages'\nimport { authClient, Account } from './messages/account'\n\n\nexport async function evmosjs() {\n    let lib = new EvmosJS('localhost:9090')\n    let account = await lib.getAccount('evmos18lw704zeyg5zs098lq7x6ypfkfjqlzzln5qh89')\n    console.log(account)\n}\n\nexport class EvmosJS {\n    private endpoint: string\n    public messages: MessagesHelper\n\n    constructor(endpoint: string) {\n        this.endpoint = endpoint;\n        this.messages = new MessagesHelper()\n    }\n\n    setEndpoint(endpoint: string) {\n        this.endpoint = endpoint;\n    }\n\n    async getAccount(address: string): Promise<Account> {\n        const client = new authClient(this.endpoint)\n        let data = await client.account(address)\n        return data;\n    }\n\n\n}\n"],"names":["cosmos","google","ethermint","createAnyMessage","msg","protobuf","Any","type_url","path","value","message","serializeBinary","base","v1beta1","Coin","pb_1","Message","constructor","data","super","initialize","this","Array","isArray","undefined","denom","amount","getField","setField","static","toObject","serialize","w","writer","BinaryWriter","length","writeString","getResultBuffer","bytes","reader","BinaryReader","nextField","isEndGroup","getFieldNumber","readString","skipField","deserialize","DecCoin","IntProto","int","DecProto","dec","bank","Params","send_enabled","default_send_enabled","getRepeatedWrapperField","SendEnabled","setRepeatedWrapperField","map","item","fromObject","writeRepeatedMessage","writeBool","readMessage","addToRepeatedWrapperField","readBool","enabled","Input","address","coins","dependency_3","Output","Supply","total","DenomUnit","exponent","aliases","writeUint32","writeRepeatedString","readUint32","addToRepeatedField","Metadata","description","denom_units","display","name","symbol","MsgSend","from_address","to_address","dependency_2","MsgSendResponse","MsgMultiSend","inputs","outputs","MsgMultiSendResponse","UnimplementedMsgService","definition","Send","requestStream","responseStream","requestSerialize","Buffer","from","requestDeserialize","Uint8Array","responseSerialize","responseDeserialize","MultiSend","MsgClient","grpc_1","makeGenericClientConstructor","credentials","options","metadata","callback","crypto","multisig","MultiSignature","signatures","writeRepeatedBytes","readBytes","CompactBitArray","extra_bits_stored","elems","writeBytes","tx","Tx","body","auth_info","getWrapperField","TxBody","setWrapperField","AuthInfo","writeMessage","TxRaw","body_bytes","auth_info_bytes","SignDoc","chain_id","account_number","writeUint64","readUint64","messages","memo","timeout_height","extension_options","non_critical_extension_options","dependency_5","signer_infos","fee","SignerInfo","Fee","public_key","mode_info","sequence","ModeInfo","single","multi","Single","setOneofWrapperField","Multi","sum","computeOneofCase","mode","writeEnum","readEnum","bitarray","mode_infos","gas_limit","payer","granter","signing","SignMode","SignatureDescriptors","SignatureDescriptor","Data","signature","dependency_1","v1","ethsecp256k1","PubKey","key","PrivKey","secp256k1","MessagesHelper","CreateTransaction","gasLimit","algo","pubKey","accountNumber","chainId","createBody","feeMessage","coin","createFee","pubKeyDecoded","signInfo","publicKey","pubkey","secp","eth","SIGN_MODE_DIRECT","createSignerInfo","authInfo","signerInfo","createAuthInfo","signDoc","bodyBytes","authInfoBytes","createSigDoc","hash","Keccak","update","toSign","digest","toString","signBytes","CreateMsgSend","fromAddress","toAddress","createMsgSend","query","PageRequest","offset","limit","count_total","reverse","PageResponse","next_key","auth","BaseAccount","pub_key","ModuleAccount","base_account","permissions","max_memo_characters","tx_sig_limit","tx_size_cost_per_byte","sig_verify_cost_ed25519","sig_verify_cost_secp256k1","QueryAccountsRequest","pagination","QueryAccountsResponse","accounts","QueryAccountRequest","QueryAccountResponse","account","QueryParamsRequest","QueryParamsResponse","params","UnimplementedQueryService","Accounts","Account","QueryClient","types","EthAccount","code_hash","grpc","require","meta","authClient","pathToService","client","createInsecure","createRequestMessage","request","type","set","_this","Promise","resolve","reject","err","res","then","ethAccount","pubkeyType","error","catch","e","EvmosJS","endpoint","setEndpoint","getAccount","lib","console","log"],"mappings":"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"}